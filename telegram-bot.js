require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const Anthropic = require('@anthropic-ai/sdk');
const fs = require('fs');
const PatientSystem = require('./patient-system');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –∏–∑ .env —Ñ–∞–π–ª–∞
const token = process.env.TELEGRAM_BOT_TOKEN;
if (!token) {
  console.error('–û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN –≤ —Ñ–∞–π–ª .env');
  process.exit(1);
}

const bot = new TelegramBot(token, { polling: true });
console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω...');

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –º–µ–Ω—é –±–æ—Ç–∞
bot.setMyCommands([
  { command: '/start', description: 'üè† –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º' },
  { command: '/new', description: 'üë§ –ù–æ–≤—ã–π –ø–∞—Ü–∏–µ–Ω—Ç' },
  { command: '/custom', description: 'üß© –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞' },
  { command: '/analyze', description: 'üìä –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Å—Å–∏—é' },
  { command: '/info', description: '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ' },
  { command: '/end', description: 'üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é' },
  { command: '/stats', description: 'üìà –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' },
  { command: '/help', description: '‚ùì –ü–æ–º–æ—â—å' }
]);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Claude API
const anthropic = new Anthropic({
  apiKey: process.env.ANTHROPIC_API_KEY
});

// –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É —ç–º—É–ª—è—Ü–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
const patientSystem = new PatientSystem();

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
let userSessions = {};

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const USER_DATA_FILE = './telegram_users.json';

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
function loadUserData() {
  try {
    if (fs.existsSync(USER_DATA_FILE)) {
      const data = fs.readFileSync(USER_DATA_FILE, 'utf8');
      userSessions = JSON.parse(data);
      console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function saveUserData(userId = null) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if (!fs.existsSync(USER_DATA_FILE)) {
      // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å –ø—É—Å—Ç—ã–º –æ–±—ä–µ–∫—Ç–æ–º
      fs.writeFileSync(USER_DATA_FILE, JSON.stringify({}, null, 2));
    }
    
    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω ID, –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞–ø–∏—Å—å
    if (userId) {
      let allData = {};
      try {
        allData = JSON.parse(fs.readFileSync(USER_DATA_FILE, 'utf8'));
      } catch (e) {
        // –ï—Å–ª–∏ —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        allData = {};
      }
      allData[userId] = userSessions[userId];
      fs.writeFileSync(USER_DATA_FILE, JSON.stringify(allData, null, 2));
    } else {
      // –ò–Ω–∞—á–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ
      fs.writeFileSync(USER_DATA_FILE, JSON.stringify(userSessions, null, 2));
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserSession(userId) {
  if (!userSessions[userId]) {
    userSessions[userId] = {
      state: 'idle',
      currentPatient: null,
      conversation: [],
      lastMessage: null,
      lastAnalysis: null
    };
    saveUserData(userId);
  }
  return userSessions[userId];
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
  const userId = msg.from.id;
  const userName = msg.from.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
  
  const userSession = getUserSession(userId);
  userSession.userName = userName;
  userSession.state = 'idle';
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º (—ç–º–æ–¥–∑–∏) –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º
  bot.sendMessage(
    userId,
    `üß† *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Å–∏—Ö–æ–¢—Ä–µ–Ω–µ—Ä!* üß†\n\n` +
    `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${userName}!\n\n` +
    `–Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∞ —Å –ø–æ–º–æ—â—å—é —Å–∏–º—É–ª—è—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏.\n\n` +
    `ü§ñ AI-—Å–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\n` +
    `üó£ –í–µ–¥–∏—Ç–µ –¥–∏–∞–ª–æ–≥, –∫–∞–∫ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–π —Å–µ—Å—Å–∏–∏\n` +
    `üìä –ü–æ–ª—É—á–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π —Ä–∞–±–æ—Ç—ã\n` +
    `üìà –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n\n` +
    `–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:`,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "start_new_patient" }],
          [{ text: "üß© –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "start_custom_patient" }],
          [{ text: "‚ùì –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º", callback_data: "show_help" }]
        ]
      }
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
  const userId = msg.from.id;
  
  bot.sendMessage(
    userId,
    "üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n" +
    "/new - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "/analyze - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é\n" +
    "/end - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º\n" +
    "/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n" +
    "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n" +
    
    "üìù *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:*\n" +
    "1. –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /new –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "2. –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –ø–∞—Ü–∏–µ–Ω—Ç—É –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n" +
    "3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /analyze –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏\n" +
    "4. –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–µ—Å—Å–∏—é –∫–æ–º–∞–Ω–¥–æ–π /end –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ",
    { parse_mode: 'Markdown' }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /new –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
bot.onText(/\/new/, async (msg) => {
  const userId = msg.from.id;
  const userSession = getUserSession(userId);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ –∞–∫—Ç–∏–≤–Ω–æ–π –ª–∏ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  if (userSession.state === 'in_dialog' && userSession.currentPatient) {
    const options = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: "–î–∞, —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ", callback_data: "confirm_new_patient" },
            { text: "–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è", callback_data: "cancel_new_patient" }
          ]
        ]
      }
    };
    
    bot.sendMessage(
      userId,
      "‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é? –¢–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥ –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω.",
      options
    );
    return;
  }
  
  // –°–æ–∑–¥–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å—Ä–∞–∑—É
  createRandomPatient(userId);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /custom –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –≤—ã–±–æ—Ä–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
bot.onText(/\/custom/, async (msg) => {
  const userId = msg.from.id;
  const userSession = getUserSession(userId);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ –∞–∫—Ç–∏–≤–Ω–æ–π –ª–∏ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  if (userSession.state === 'in_dialog' && userSession.currentPatient) {
    const options = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: "–î–∞, –≤—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "confirm_custom_patient" },
            { text: "–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è", callback_data: "cancel_new_patient" }
          ]
        ]
      }
    };
    
    bot.sendMessage(
      userId,
      "‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é? –¢–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥ –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω.",
      options
    );
    return;
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  showCategoriesMenu(userId);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function showCategoriesMenu(userId) {
  const categories = Object.entries(patientSystem.casesDB);
  const keyboard = [];
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ø–æ 2 –≤ —Ä—è–¥)
  for (let i = 0; i < categories.length; i += 2) {
    const row = [];
    row.push({ text: categories[i][1].name, callback_data: `category:${categories[i][0]}` });
    
    if (i + 1 < categories.length) {
      row.push({ text: categories[i+1][1].name, callback_data: `category:${categories[i+1][0]}` });
    }
    
    keyboard.push(row);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  keyboard.push([{ text: "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "random_patient" }]);
  
  const options = {
    reply_markup: {
      inline_keyboard: keyboard
    }
  };
  
  bot.sendMessage(
    userId,
    "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–∞—Ü–∏–µ–Ω—Ç–∞:",
    options
  );
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
bot.on('callback_query', async (callbackQuery) => {
  const data = callbackQuery.data;
  const userId = callbackQuery.from.id;
  
  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data === 'confirm_new_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
    const userSession = getUserSession(userId);
    userSession.state = 'idle';
    userSession.currentPatient = null;
    userSession.conversation = [];
    userSession.lastAnalysis = null;
    saveUserData(userId);
    
    createRandomPatient(userId);
    return;
  }

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –≤—ã–±–æ—Ä–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  if (data === 'confirm_custom_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const userSession = getUserSession(userId);
    userSession.state = 'idle';
    userSession.currentPatient = null;
    userSession.conversation = [];
    userSession.lastAnalysis = null;
    saveUserData(userId);
    
    showCategoriesMenu(userId);
    return;
  }
  
  // –û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data === 'cancel_new_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    bot.sendMessage(userId, "–í—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç–µ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º.");
    return;
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data === 'random_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    createRandomPatient(userId);
    return;
  }
  
  // –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  if (data.startsWith('category:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const category = data.split(':')[1];
    
    if (patientSystem.casesDB[category]) {
      showOpennessMenu(userId, category);
    } else {
      bot.sendMessage(userId, "‚ùå –û—à–∏–±–∫–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
    }
    return;
  }
  
  // –í—ã–±–æ—Ä –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data.startsWith('openness:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const [_, category, openness] = data.split(':');
    
    if (patientSystem.casesDB[category] && patientSystem.openness[openness]) {
      showComplexityMenu(userId, category, openness);
    } else {
      bot.sendMessage(userId, "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã");
    }
    return;
  }
  
  // –í—ã–±–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data.startsWith('complexity:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const [_, category, openness, complexity] = data.split(':');
    const complexityNum = parseInt(complexity);
    
    if (
      patientSystem.casesDB[category] && 
      patientSystem.openness[openness] && 
      complexityNum >= 1 && complexityNum <= 5
    ) {
      createPatient(userId, category, openness, complexityNum);
    } else {
      bot.sendMessage(userId, "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã");
    }
    return;
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
  if (data === 'show_help') {
    await bot.answerCallbackQuery(callbackQuery.id);
    
    const helpText = 
      "üß† *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ü—Å–∏—Ö–æ–¢—Ä–µ–Ω–µ—Ä–æ–º* üß†\n\n" +
      "1Ô∏è‚É£ *–°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞*\n" +
      "   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–∏–∞–≥–Ω–æ–∑–∞\n" +
      "   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É—Ä–æ–≤–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏\n" +
      "   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å —Å–ª—É—á–∞—è\n\n" +
      
      "2Ô∏è‚É£ *–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Å–µ—Å—Å–∏—é*\n" +
      "   ‚Ä¢ –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n" +
      "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏\n" +
      "   ‚Ä¢ –†–∞–±–æ—Ç–∞–π—Ç–µ —Å —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞\n\n" +
      
      "3Ô∏è‚É£ *–ü–æ–ª—É—á–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å*\n" +
      "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /analyze –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–µ—Å—Å–∏–∏\n" +
      "   ‚Ä¢ –£–∑–Ω–∞–π—Ç–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã\n" +
      "   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n\n" +
      
      "4Ô∏è‚É£ *–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å*\n" +
      "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ /stats\n" +
      "   ‚Ä¢ –†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\n\n" +
      
      "üí° *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n" +
      "/new - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
      "/analyze - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é\n" +
      "/info - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
      "/end - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é\n" +
      "/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n";
    
    bot.sendMessage(userId, helpText, {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: "üë§ –°–æ–∑–¥–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "start_new_patient" }]
        ]
      }
    });
    
    return;
  }
  
  // –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data === 'start_new_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    // –°–æ–∑–¥–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å—Ä–∞–∑—É
    createRandomPatient(userId);
    return;
  }
  
  // –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –≤—ã–±–æ—Ä–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  if (data === 'start_custom_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
    showCategoriesMenu(userId);
    return;
  }
  
  // –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞
  if (data === 'continue_session') {
    await bot.answerCallbackQuery(callbackQuery.id);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
    const options = {
      reply_markup: {
        keyboard: [
          [
            { text: "‚ÑπÔ∏è –ò–Ω—Ñ–æ" },
            { text: "üìä –ê–Ω–∞–ª–∏–∑" },
            { text: "üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å" }
          ]
        ],
        resize_keyboard: true,
        one_time_keyboard: false,
        input_field_placeholder: "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–∞—Ü–∏–µ–Ω—Ç—É..."
      }
    };
    
    bot.sendMessage(
      userId,
      "‚úÖ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º.",
      options
    );
    return;
  }
  
  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
  if (data === 'end_dialog') {
    await bot.answerCallbackQuery(callbackQuery.id);
    endDialog(userId);
    return;
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏
function showOpennessMenu(userId, category) {
  const keyboard = [
    [
      { text: "–û—Ç–∫—Ä—ã—Ç—ã–π", callback_data: `openness:${category}:open` },
      { text: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π", callback_data: `openness:${category}:neutral` }
    ],
    [
      { text: "–ó–∞–∫—Ä—ã—Ç—ã–π", callback_data: `openness:${category}:closed` }
    ]
  ];
  
  const options = {
    reply_markup: {
      inline_keyboard: keyboard
    }
  };
  
  bot.sendMessage(
    userId,
    `–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${patientSystem.casesDB[category].name}":`,
    options
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
function showComplexityMenu(userId, category, openness) {
  const keyboard = [
    [
      { text: "1 (–ü—Ä–æ—Å—Ç–æ–π)", callback_data: `complexity:${category}:${openness}:1` },
      { text: "2", callback_data: `complexity:${category}:${openness}:2` }
    ],
    [
      { text: "3 (–°—Ä–µ–¥–Ω–∏–π)", callback_data: `complexity:${category}:${openness}:3` },
      { text: "4", callback_data: `complexity:${category}:${openness}:4` }
    ],
    [
      { text: "5 (–°–ª–æ–∂–Ω—ã–π)", callback_data: `complexity:${category}:${openness}:5` }
    ]
  ];
  
  const options = {
    reply_markup: {
      inline_keyboard: keyboard
    }
  };
  
  bot.sendMessage(
    userId,
    `–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å "${patientSystem.openness[openness].name}" —Ç–∏–ø–æ–º –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏:`,
    options
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
async function createRandomPatient(userId) {
  const waitingMsg = await bot.sendMessage(
    userId,
    "‚è≥ *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞...*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.",
    { parse_mode: 'Markdown' }
  );
  
  try {
    const patient = await patientSystem.generateCase();
    startNewDialogWithPatient(userId, patient, waitingMsg.message_id);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞:", error);
    
    bot.editMessageText(
      "‚ùå *–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞*\n\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
      {
        chat_id: userId,
        message_id: waitingMsg.message_id,
        parse_mode: 'Markdown'
      }
    );
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
async function createPatient(userId, category, openness, complexity) {
  const waitingMsg = await bot.sendMessage(
    userId,
    "‚è≥ *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞...*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.",
    { parse_mode: 'Markdown' }
  );
  
  try {
    const patient = await patientSystem.generateCase({
      category: category,
      openness: openness,
      complexity: complexity
    });
    
    startNewDialogWithPatient(userId, patient, waitingMsg.message_id);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞:", error);
    
    bot.editMessageText(
      "‚ùå *–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞*\n\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
      {
        chat_id: userId,
        message_id: waitingMsg.message_id,
        parse_mode: 'Markdown'
      }
    );
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞ —Å —Å–æ–∑–¥–∞–Ω–Ω—ã–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–º
async function startNewDialogWithPatient(userId, patient, waitingMsgId) {
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userSession = getUserSession(userId);
    userSession.currentPatient = patient;
    userSession.state = 'in_dialog';
    userSession.conversation = [];
    saveUserData(userId);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–µ–∫—Ä–µ—Ç–∞—Ä—è
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è –¥–ª—è —Å–µ–∫—Ä–µ—Ç–∞—Ä—è
    const secretaryNames = ["–ï–ª–µ–Ω–∞", "–ò—Ä–∏–Ω–∞", "–ê–Ω–Ω–∞", "–û–ª—å–≥–∞", "–ú–∞—Ä–∏—è"];
    const secretaryName = secretaryNames[Math.floor(Math.random() * secretaryNames.length)];
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–∏–∞–≥–Ω–æ–∑–∞
    let reasonForVisit;
    if (patient.meta.diagnosis.includes("—Ç—Ä–µ–≤–æ–∂")) {
      reasonForVisit = "–±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–µ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–∏";
    } else if (patient.meta.diagnosis.includes("–¥–µ–ø—Ä–µ—Å—Å")) {
      reasonForVisit = "–ø–æ–¥–∞–≤–ª–µ–Ω–Ω–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ –∏ –ø–æ—Ç–µ—Ä–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –∂–∏–∑–Ω–∏";
    } else if (patient.meta.diagnosis.includes("—Ñ–æ–±–∏—è")) {
      reasonForVisit = "—Å–∏–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞—Ö–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–µ—à–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∂–∏—Ç—å";
    } else {
      reasonForVisit = "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö";
    }
    
    // –í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞
    const appointmentHours = 10 + Math.floor(Math.random() * 8); // –æ—Ç 10 –¥–æ 17
    const appointmentMinutes = Math.floor(Math.random() * 4) * 15; // 0, 15, 30 –∏–ª–∏ 45
    const appointmentTime = `${appointmentHours}:${appointmentMinutes === 0 ? '00' : appointmentMinutes}`;
    
    const patientInfo = 
      `üë©‚Äçüíº *–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–µ–∫—Ä–µ—Ç–∞—Ä—è ${secretaryName}:*\n\n` +
      `–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –¥–æ–∫—Ç–æ—Ä!\n\n` +
      `–ö –≤–∞–º –Ω–∞ –ø—Ä–∏—ë–º –≤ ${appointmentTime} –∑–∞–ø–∏—Å–∞–Ω –ø–∞—Ü–∏–µ–Ω—Ç *${patient.name}*, ${patient.age} ${getYearWord(patient.age)}.\n\n` +
      `–ü–µ—Ä–≤–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ. –ñ–∞–ª—É–µ—Ç—Å—è –Ω–∞ ${reasonForVisit}. ` +
      `${patient.gender === "–º—É–∂—Å–∫–æ–π" ? "–°–∞–º" : "–°–∞–º–∞"} –∑–∞–ø–∏—Å–∞–ª${patient.gender === "–º—É–∂—Å–∫–æ–π" ? "—Å—è" : "–∞—Å—å"} ` +
      `–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –Ω–∞—Å—Ç—Ä–æ–π –Ω–∞ —Ä–∞–±–æ—Ç—É ${patient.openness.includes("–æ—Ç–∫—Ä—ã—Ç") ? "–ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π" : patient.openness.includes("–Ω–µ–π—Ç—Ä–∞–ª—å") ? "—É–º–µ—Ä–µ–Ω–Ω—ã–π" : "—Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–π"}.\n\n` +
      `–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /info.`;
    
    await bot.editMessageText(patientInfo, {
      chat_id: userId,
      message_id: waitingMsgId,
      parse_mode: 'Markdown'
    });
    
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –∫—Ä–∞—Å–∏–≤–æ–π –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    const options = {
      reply_markup: {
        keyboard: [
          [
            { text: "‚ÑπÔ∏è –ò–Ω—Ñ–æ" },
            { text: "üìä –ê–Ω–∞–ª–∏–∑" },
            { text: "üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å" }
          ]
        ],
        resize_keyboard: true,
        one_time_keyboard: false,
        input_field_placeholder: "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–∞—Ü–∏–µ–Ω—Ç—É..."
      }
    };
    
    // –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º, —á—Ç–æ –ø–∞—Ü–∏–µ–Ω—Ç –∑–∞—à–µ–ª –≤ –∫–∞–±–∏–Ω–µ—Ç
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
    setTimeout(() => {
      bot.sendMessage(
        userId,
        "üö™ *–ü–∞—Ü–∏–µ–Ω—Ç –≤—Ö–æ–¥–∏—Ç –≤ –∫–∞–±–∏–Ω–µ—Ç...*",
        { parse_mode: 'Markdown' }
      );
      
      // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥
      setTimeout(() => {
        bot.sendMessage(
          userId,
          "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥. –û–±—ã—á–Ω–æ –ø–µ—Ä–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –æ –ø—Ä–∏—á–∏–Ω–µ –æ–±—Ä–∞—â–µ–Ω–∏—è.",
          options
        );
      }, 2000);
    }, 1000);
    
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞:", error);
    
    bot.editMessageText(
      "‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
      {
        chat_id: userId,
        message_id: waitingMsgId,
        parse_mode: 'Markdown'
      }
    );
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞ "–≥–æ–¥"
function getYearWord(age) {
  if (age % 10 === 1 && age % 100 !== 11) {
    return "–≥–æ–¥";
  } else if ((age % 10 >= 2 && age % 10 <= 4) && (age % 100 < 12 || age % 100 > 14)) {
    return "–≥–æ–¥–∞";
  } else {
    return "–ª–µ—Ç";
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∏–ø–∞ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
function formatOpenness(openness) {
  if (openness.includes("–æ—Ç–∫—Ä—ã—Ç")) {
    return "–í—ã—Å–æ–∫–∞—è ‚≠ê‚≠ê‚≠ê"; 
  } else if (openness.includes("–Ω–µ–π—Ç—Ä–∞–ª—å")) {
    return "–°—Ä–µ–¥–Ω—è—è ‚≠ê‚≠ê";
  } else {
    return "–ù–∏–∑–∫–∞—è ‚≠ê";
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤–æ–ø—Ä–æ—Å—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∞)
 */
bot.on('message', (msg) => {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–æ–≤
  const userId = msg.from.id;
  const userSession = getUserSession(userId);
  userSession.lastMessage = msg;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ
  if (userSession.userName === undefined) {
    userSession.userName = msg.from.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–æ–∫
  if (msg.text) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–∏–∞–ª–æ–≥–∞
    if (msg.text === "‚ÑπÔ∏è –ò–Ω—Ñ–æ") {
      // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã info
      showPatientInfo(userId);
      return;
    } else if (msg.text === "üìä –ê–Ω–∞–ª–∏–∑") {
      // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã analyze
      analyzeSession(userId);
      return;
    } else if (msg.text === "üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å") {
      // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã end
      endDialog(userId);
      return;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    if (msg.text === "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç") {
      // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
      createRandomPatient(userId);
      return;
    } else if (msg.text === "üß© –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞") {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
      showCategoriesMenu(userId);
      return;
    } else if (msg.text === "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞") {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      showUserStats(userId);
      return;
    } else if (msg.text === "‚ùì –ü–æ–º–æ—â—å") {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É
      showHelp(userId);
      return;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if (msg.text.startsWith('/')) {
      return;
    }
  }
  
  if (userSession.state === 'in_dialog') {
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∏–∞–ª–æ–≥ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞
    continueDialog(userId, msg.text);
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
async function continueDialog(userId, message) {
  const userSession = getUserSession(userId);
  
  if (!userSession.currentPatient) {
    bot.sendMessage(
      userId,
      "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /new –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è."
    );
    return;
  }
  
  const waitingMsg = await bot.sendMessage(
    userId,
    "‚è≥ –ü–∞—Ü–∏–µ–Ω—Ç –ø–µ—á–∞—Ç–∞–µ—Ç...",
    { reply_to_message_id: userSession.lastMessage.message_id }
  );
  
  try {
    let response;
    
    // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –¥–∏–∞–ª–æ–≥–µ
    if (userSession.conversation.length === 0) {
      response = await patientSystem.startPatientDialog(userSession.currentPatient, message);
    } else {
      response = await patientSystem.continuePatientDialog(
        userSession.currentPatient,
        userSession.conversation,
        message
      );
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    userSession.conversation.push({
      therapist: message,
      patient: response.patient_response
    });
    saveUserData(userId);
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—á–∞—Ç–∞–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–µ–π —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
    await bot.sendChatAction(userId, 'typing');
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞, –∫–∞–∫ –±—É–¥—Ç–æ –ø–∞—Ü–∏–µ–Ω—Ç –ø–µ—á–∞—Ç–∞–µ—Ç (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–ª–∏–Ω—ã –æ—Ç–≤–µ—Ç–∞)
    const typingDelay = Math.min(2000, response.patient_response.length * 30);
    await new Promise(resolve => setTimeout(resolve, typingDelay));
    
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—á–∞—Ç–∞–Ω–∏–∏
    await bot.deleteMessage(userId, waitingMsg.message_id);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞
    bot.sendMessage(userId, response.patient_response);
    
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞:", error);
    
    bot.editMessageText(
      "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å.",
      {
        chat_id: userId,
        message_id: waitingMsg.message_id
      }
    );
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ
/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /info –∏ –∫–Ω–æ–ø–∫–∏ –ò–Ω—Ñ–æ)
 */
function showPatientInfo(userId) {
  const userSession = getUserSession(userId);
  
  if (!userSession.currentPatient) {
    bot.sendMessage(
      userId,
      "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /new –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è."
    );
    return;
  }
  
  const patient = userSession.currentPatient;
  
  // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
  const patientInfo = 
    `üìã *–ö–ê–†–¢–ê –ü–ê–¶–ò–ï–ù–¢–ê*\n\n` +
    `üë§ *${patient.name}* | ${patient.age} ${getYearWord(patient.age)} | ${patient.gender === "–º—É–∂—Å–∫–æ–π" ? "‚ôÇÔ∏è" : "‚ôÄÔ∏è"}\n` +
    `üíº *–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:* ${patient.profession}\n` +
    `ü©∫ *–î–∏–∞–≥–Ω–æ–∑:* ${patient.meta.diagnosis}\n` +
    `üîì *–û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å:* ${formatOpenness(patient.openness)}\n\n` +
    
    `üîç *–û–°–ù–û–í–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê*\n${patient.problem}\n\n` +
    
    `ü©∫ *–°–ò–ú–ü–¢–û–ú–´*\n${patient.symptoms.map(s => `‚Ä¢ ${s}`).join('\n')}\n\n` +
    
    `üìú *–ê–ù–ê–ú–ù–ï–ó*\n${patient.history}\n\n` +
    
    `‚ö†Ô∏è *–¢–†–ò–ì–ì–ï–†–´*\n${patient.triggers.map(t => `‚Ä¢ ${t}`).join('\n')}\n\n` +
    
    `üõ°Ô∏è *–ó–ê–©–ò–¢–ù–´–ï –ú–ï–•–ê–ù–ò–ó–ú–´*\n${patient.defenses.map(d => `‚Ä¢ ${d}`).join('\n')}\n\n` +
    
    `üó£Ô∏è *–û–°–û–ë–ï–ù–ù–û–°–¢–ò –ö–û–ú–ú–£–ù–ò–ö–ê–¶–ò–ò*\n${patient.speech}\n\n` +
    
    `‚öîÔ∏è *–ü–ê–¢–¢–ï–†–ù–´ –°–û–ü–†–û–¢–ò–í–õ–ï–ù–ò–Ø*\n${patient.resistance}`;
    
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ "—Ñ–∞–π–ª–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∫–∞—Ä—Ç—ã"
  bot.sendMessage(
    userId,
    patientInfo,
    { 
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: "‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –¥–∏–∞–ª–æ–≥—É", callback_data: "continue_session" }]
        ]
      }
    }
  );
}

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã /info
bot.onText(/\/info/, (msg) => {
  showPatientInfo(msg.from.id);
});

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–µ—Å—Å–∏–∏ (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /analyze –∏ –∫–Ω–æ–ø–∫–∏ –ê–Ω–∞–ª–∏–∑)
 */
async function analyzeSession(userId) {
  const userSession = getUserSession(userId);
  
  if (!userSession.currentPatient || userSession.conversation.length === 0) {
    bot.sendMessage(
      userId,
      "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞. –ù–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º –∏ –∑–∞–¥–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤."
    );
    return;
  }
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∞–Ω–∞–ª–∏–∑–∞
  const waitingMsg = await bot.sendMessage(
    userId,
    "‚è≥ *–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–µ—Å—Å–∏—é...*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.",
    { parse_mode: 'Markdown' }
  );
  
  try {
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const patient = userSession.currentPatient;
    const conversation = userSession.conversation;
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const analysisPrompt = `
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç—É –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫—É—é —Å–µ—Å—Å–∏—é –∏ –¥–∞–π –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ç–µ—Ä–∞–ø–µ–≤—Ç—É.

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–ê–¶–ò–ï–ù–¢–ï:
- –ò–º—è: ${patient.name}, ${patient.age} –ª–µ—Ç
- –î–∏–∞–≥–Ω–æ–∑: ${patient.meta.diagnosis}
- –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å: ${patient.openness}
- –°–∏–º–ø—Ç–æ–º—ã: ${patient.symptoms.join(", ")}

–î–ò–ê–õ–û–ì:
${conversation.map((exchange, i) => 
  `[${i+1}] –¢–µ—Ä–∞–ø–µ–≤—Ç: ${exchange.therapist}\n[${i+1}] –ü–∞—Ü–∏–µ–Ω—Ç: ${exchange.patient}`
).join("\n\n")}

–î–∞–π –∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—É–Ω–∫—Ç–∞–º:
1. –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã/–ø—Ä–æ–±–ª–µ–º—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞
2. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ —Ö–æ–¥–µ —Å–µ—Å—Å–∏–∏
3. –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏–∏
4. –ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –≤ —Ä–∞–±–æ—Ç–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∞
5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å–µ—Å—Å–∏–∏

–ê–Ω–∞–ª–∏–∑ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫—Ä–∞—Ç–∫–∏–º, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º.`;

    // –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const analysisResponse = await anthropic.messages.create({
      model: 'claude-3-haiku-20240307',
      max_tokens: 500,
      messages: [
        { role: 'user', content: analysisPrompt }
      ]
    });
    
    const analysis = analysisResponse.content[0].text;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑
    userSession.lastAnalysis = analysis;
    saveUserData(userId);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    // –†–∞–∑–±–∏–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑ –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã –ø–æ –Ω–æ–º–µ—Ä–∞–º
    const formattedAnalysis = analysis
      .replace(/(\d+\.\s)/g, '\n\n$1') // –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–æ–π–Ω–æ–π –ø–µ—Ä–µ–Ω–æ—Å –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –Ω–æ–º–µ—Ä–æ–º
      .replace(/^\s+/, ''); // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ
      
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑ —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    await bot.editMessageText(
      `üìä *–ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –°–ï–°–°–ò–ò*\n\n${formattedAnalysis}`,
      {
        chat_id: userId,
        message_id: waitingMsg.message_id,
        parse_mode: 'Markdown'
      }
    );
    
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å
    const options = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: "‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data: "continue_session" },
            { text: "üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data: "end_dialog" }
          ]
        ]
      }
    };
    
    bot.sendMessage(
      userId,
      "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?",
      options
    );
    
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å–µ—Å—Å–∏–∏:", error);
    
    bot.editMessageText(
      "‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å–µ—Å—Å–∏–∏*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.",
      {
        chat_id: userId,
        message_id: waitingMsg.message_id,
        parse_mode: 'Markdown'
      }
    );
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /analyze - –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
 */
bot.onText(/\/analyze/, (msg) => {
  analyzeSession(msg.from.id);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /end - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
bot.onText(/\/end/, (msg) => {
  const userId = msg.from.id;
  endDialog(userId);
});


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
function endDialog(userId) {
  const userSession = getUserSession(userId);
  
  if (!userSession.currentPatient) {
    bot.sendMessage(
      userId,
      "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º."
    );
    return;
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  const patient = userSession.currentPatient;
  const exchangeCount = userSession.conversation.length;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  if (!userSession.stats) {
    userSession.stats = {
      totalSessions: 0,
      totalExchanges: 0,
      sessionsByCategory: {},
      lastSessionTime: null
    };
  }
  
  userSession.stats.totalSessions++;
  userSession.stats.totalExchanges += exchangeCount;
  userSession.stats.lastSessionTime = new Date().toISOString();
  
  const category = patient.meta.category;
  if (!userSession.stats.sessionsByCategory[category]) {
    userSession.stats.sessionsByCategory[category] = 0;
  }
  userSession.stats.sessionsByCategory[category]++;
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
  let reportText = 
    `üèÅ *–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞*\n\n` +
    `–ü–∞—Ü–∏–µ–Ω—Ç: *${patient.name}*, ${patient.age} ${getYearWord(patient.age)}\n` +
    `–î–∏–∞–≥–Ω–æ–∑: ${patient.meta.diagnosis}\n` +
    `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤ —Ä–µ–ø–ª–∏–∫–∞–º–∏: ${exchangeCount}\n\n`;
  
  if (userSession.lastAnalysis) {
    reportText += `üìä *–ò—Ç–æ–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑:*\n${userSession.lastAnalysis}\n\n`;
  }
  
  reportText += `–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /new`;
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
  userSession.state = 'idle';
  userSession.currentPatient = null;
  userSession.conversation = [];
  userSession.lastAnalysis = null;
  saveUserData(userId);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
  bot.sendMessage(
    userId,
    reportText,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        keyboard: [
          [
            { text: "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç" }, 
            { text: "üß© –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞" }
          ],
          [
            { text: "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" }, 
            { text: "‚ùì –ü–æ–º–æ—â—å" }
          ]
        ],
        resize_keyboard: true,
        one_time_keyboard: false,
        input_field_placeholder: "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É..."
      }
    }
  );
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
 */
function showHelp(userId) {
  const helpText = 
    "üß† *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ü—Å–∏—Ö–æ–¢—Ä–µ–Ω–µ—Ä–æ–º* üß†\n\n" +
    "1Ô∏è‚É£ *–°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞*\n" +
    "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /new –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /custom –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n" +
    "   ‚Ä¢ –ö–∞–∂–¥—ã–π –ø–∞—Ü–∏–µ–Ω—Ç —É–Ω–∏–∫–∞–ª–µ–Ω –∏ –∏–º–µ–µ—Ç —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é\n\n" +
    
    "2Ô∏è‚É£ *–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Å–µ—Å—Å–∏—é*\n" +
    "   ‚Ä¢ –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n" +
    "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏\n" +
    "   ‚Ä¢ –†–∞–±–æ—Ç–∞–π—Ç–µ —Å —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞\n\n" +
    
    "3Ô∏è‚É£ *–ü–æ–ª—É—á–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å*\n" +
    "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–ê–Ω–∞–ª–∏–∑' –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–µ—Å—Å–∏–∏\n" +
    "   ‚Ä¢ –£–∑–Ω–∞–π—Ç–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã\n" +
    "   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n\n" +
    
    "4Ô∏è‚É£ *–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å*\n" +
    "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'\n" +
    "   ‚Ä¢ –†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\n\n" +
    
    "üí° *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n" +
    "/new - –°–æ–∑–¥–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "/custom - –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "/analyze - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é\n" +
    "/info - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "/end - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é\n" +
    "/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n";
  
  bot.sendMessage(userId, helpText, {
    parse_mode: 'Markdown',
    reply_markup: {
      inline_keyboard: [
        [{ text: "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "start_new_patient" }],
        [{ text: "üß© –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "start_custom_patient" }]
      ]
    }
  });
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function showUserStats(userId) {
  const userSession = getUserSession(userId);
  
  if (!userSession.stats || userSession.stats.totalSessions === 0) {
    bot.sendMessage(
      userId,
      "üìä *–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞*\n\n–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é /new –∏ –ø—Ä–æ–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é —Å–µ—Å—Å–∏—é!",
      { 
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: "üë§ –°–æ–∑–¥–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "start_new_patient" }]
          ]
        }
      }
    );
    return;
  }
  
  const stats = userSession.stats;
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  let categoriesText = "";
  if (stats.sessionsByCategory) {
    categoriesText = Object.entries(stats.sessionsByCategory)
      .map(([category, count]) => {
        // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const categoryName = patientSystem.casesDB[category] 
          ? patientSystem.casesDB[category].name 
          : category;
        return `‚Ä¢ ${categoryName}: ${count}`;
      })
      .join('\n');
  }
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏
  let lastSessionDate = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";
  if (stats.lastSessionTime) {
    const date = new Date(stats.lastSessionTime);
    lastSessionDate = `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;
  }
  
  // –†–∞—Å—Å—á–∏—Ç–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —É—Ä–æ–≤–µ–Ω—å
  const sessionsLevel = getSessionsLevel(stats.totalSessions);
  const averageReplies = Math.round(stats.totalExchanges / stats.totalSessions);
  const levelDescription = getLevelDescription(sessionsLevel);
  
  // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
  const statsText = 
    `üìä *–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–°–ò–•–û–¢–ï–†–ê–ü–ï–í–¢–ê*\n\n` +
    `üë§ *–£—Ä–æ–≤–µ–Ω—å:* ${sessionsLevel} - ${levelDescription}\n` +
    `üèÜ *–ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π:* ${stats.totalSessions}\n` +
    `üí¨ *–û–±–º–µ–Ω–æ–≤ —Ä–µ–ø–ª–∏–∫–∞–º–∏:* ${stats.totalExchanges}\n` +
    `üìè *–°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ —Å–µ—Å—Å–∏–∏:* ${averageReplies} —Ä–µ–ø–ª–∏–∫\n` +
    `‚è±Ô∏è *–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è:* ${lastSessionDate}\n\n` +
    
    `üìã *–°–ï–°–°–ò–ò –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú:*\n${categoriesText}\n\n` +
    
    `üí° –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –±–æ–ª—å—à–µ —Å–µ—Å—Å–∏–π —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –ø–æ–≤—ã—Å–∏—Ç—å —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∏ —Ä–∞–∑–≤–∏—Ç—å –Ω–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏!`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  bot.sendMessage(
    userId,
    statsText,
    { 
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "start_new_patient" }],
          [{ text: "üß© –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "start_custom_patient" }]
        ]
      }
    }
  );
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
  showHelp(msg.from.id);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.onText(/\/stats/, (msg) => {
  showUserStats(msg.from.id);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–µ—Å—Å–∏–π
function getSessionsLevel(totalSessions) {
  if (totalSessions < 5) {
    return "–ù–æ–≤–∏—á–æ–∫";
  } else if (totalSessions < 15) {
    return "–°—Ç–∞–∂–µ—Ä";
  } else if (totalSessions < 30) {
    return "–ü—Ä–∞–∫—Ç–∏–∫";
  } else if (totalSessions < 50) {
    return "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç";
  } else if (totalSessions < 100) {
    return "–≠–∫—Å–ø–µ—Ä—Ç";
  } else {
    return "–ú–∞—Å—Ç–µ—Ä";
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —É—Ä–æ–≤–Ω—è
function getLevelDescription(level) {
  const descriptions = {
    "–ù–æ–≤–∏—á–æ–∫": "–Ω–∞—á–∞–ª–æ –ø—É—Ç–∏ –≤ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏",
    "–°—Ç–∞–∂–µ—Ä": "—Ä–∞–∑–≤–∏—Ç–∏–µ –±–∞–∑–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤",
    "–ü—Ä–∞–∫—Ç–∏–∫": "—É–≤–µ—Ä–µ–Ω–Ω–æ–µ –≤–µ–¥–µ–Ω–∏–µ —Å–µ—Å—Å–∏–π",
    "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç": "–≥–ª—É–±–æ–∫–∏–π —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥",
    "–≠–∫—Å–ø–µ—Ä—Ç": "–≤–∏—Ä—Ç—É–æ–∑–Ω–æ–µ –≤–ª–∞–¥–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∞–º–∏",
    "–ú–∞—Å—Ç–µ—Ä": "–Ω–µ–ø—Ä–µ–≤–∑–æ–π–¥–µ–Ω–Ω—ã–π –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç"
  };
  
  return descriptions[level] || "–ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–π —Ç–µ—Ä–∞–ø–µ–≤—Ç";
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
loadUserData();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–∞–¥–µ–Ω–∏—è –±–æ—Ç–∞
process.on('uncaughtException', (error) => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ–±–µ—â–∞–Ω–∏—è:', reason);
});

console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–π!');