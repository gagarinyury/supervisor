require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const Anthropic = require('@anthropic-ai/sdk');
const fs = require('fs');
const path = require('path');
const PatientSystem = require('./patient-system');
const CacheManager = require('./cache-manager');
const VoiceHandler = require('./voice-handler');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –∏–∑ .env —Ñ–∞–π–ª–∞
const token = process.env.TELEGRAM_BOT_TOKEN;
if (!token) {
  console.error('–û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN –≤ —Ñ–∞–π–ª .env');
  process.exit(1);
}

const bot = new TelegramBot(token, { polling: true });
console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω...');

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –º–µ–Ω—é –±–æ—Ç–∞
bot.setMyCommands([
  { command: '/start', description: 'üè† –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º' },
  { command: '/new', description: 'üë§ –ù–æ–≤—ã–π –ø–∞—Ü–∏–µ–Ω—Ç' },
  { command: '/custom', description: 'üß© –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –ø–∞—Ü–∏–µ–Ω—Ç–∞' },
  { command: '/patients', description: 'üìÇ –ú–æ–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã' },
  { command: '/history', description: 'üìö –ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–π' },
  { command: '/analyze', description: 'üìä –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Å—Å–∏—é' },
  { command: '/info', description: '‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ' },
  { command: '/end', description: 'üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é' },
  { command: '/stats', description: 'üìà –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞' },
  { command: '/feedback', description: 'üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤' },
  { command: '/help', description: '‚ùì –ü–æ–º–æ—â—å' }
]);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Claude API
const anthropic = new Anthropic({
  apiKey: process.env.ANTHROPIC_API_KEY
});

// –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º—É —ç–º—É–ª—è—Ü–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
const patientSystem = new PatientSystem();

// –°–æ–∑–¥–∞–µ–º CacheManager –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤
const cacheManager = new CacheManager();

// –°–æ–∑–¥–∞–µ–º VoiceHandler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
const voiceHandler = new VoiceHandler();

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
let userSessions = {};

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const USER_DATA_FILE = './telegram_users.json';

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
function loadUserData() {
  try {
    if (fs.existsSync(USER_DATA_FILE)) {
      const data = fs.readFileSync(USER_DATA_FILE, 'utf8');
      userSessions = JSON.parse(data);
      console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function saveUserData(userId = null) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if (!fs.existsSync(USER_DATA_FILE)) {
      // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å –ø—É—Å—Ç—ã–º –æ–±—ä–µ–∫—Ç–æ–º
      fs.writeFileSync(USER_DATA_FILE, JSON.stringify({}, null, 2));
    }
    
    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω ID, –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∑–∞–ø–∏—Å—å
    if (userId) {
      let allData = {};
      try {
        allData = JSON.parse(fs.readFileSync(USER_DATA_FILE, 'utf8'));
      } catch (e) {
        // –ï—Å–ª–∏ —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        allData = {};
      }
      allData[userId] = userSessions[userId];
      fs.writeFileSync(USER_DATA_FILE, JSON.stringify(allData, null, 2));
    } else {
      // –ò–Ω–∞—á–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ
      fs.writeFileSync(USER_DATA_FILE, JSON.stringify(userSessions, null, 2));
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
  }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserSession(userId) {
  if (!userSessions[userId]) {
    userSessions[userId] = {
      state: 'idle',
      currentPatient: null,
      conversation: [],
      lastMessage: null,
      lastAnalysis: null,
      waitingContinuation: false, // –§–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –æ–±—Ä–µ–∑–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
      partialResponse: null,       // –•—Ä–∞–Ω–∏—Ç —á–∞—Å—Ç–∏—á–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
      analysisSessions: [],        // –ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      patientAnalysisHistory: {}   // –ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ –ø–æ –∫–∞–∂–¥–æ–º—É –ø–∞—Ü–∏–µ–Ω—Ç—É {patientId: [analyses]}
    };
    saveUserData(userId);
  }
  return userSessions[userId];
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
  const userId = msg.from.id;
  const userName = msg.from.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
  
  const userSession = getUserSession(userId);
  userSession.userName = userName;
  userSession.state = 'idle';
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º (—ç–º–æ–¥–∑–∏) –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º
  bot.sendMessage(
    userId,
    `üß† *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Å–∏—Ö–æ–¢—Ä–µ–Ω–µ—Ä!* üß†\n\n` +
    `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${userName}!\n\n` +
    `–Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∞ —Å –ø–æ–º–æ—â—å—é —Å–∏–º—É–ª—è—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏.\n\n` +
    `ü§ñ AI-—Å–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\n` +
    `üó£ –í–µ–¥–∏—Ç–µ –¥–∏–∞–ª–æ–≥, –∫–∞–∫ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–π —Å–µ—Å—Å–∏–∏\n` +
    `üìä –ü–æ–ª—É—á–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π —Ä–∞–±–æ—Ç—ã\n` +
    `üìà –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n\n` +
    `üíù –ñ–µ–ª–∞—é –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞!\n\n` +
    `üìû –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: @YourTerapist\n\n` +
    `–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:`,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "start_new_patient" }],
          [{ text: "üß© –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "start_custom_patient" }],
          [{ text: "‚ùì –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º", callback_data: "show_help" }]
        ]
      }
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
  const userId = msg.from.id;
  
  bot.sendMessage(
    userId,
    "üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n" +
    "/new - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "/custom - –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "/patients - –ú–æ–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã\n" +
    "/history - –ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–π\n" +
    "/analyze - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é\n" +
    "/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ\n" +
    "/end - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º\n" +
    "/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n" +
    
    "üìù *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:*\n" +
    "1. –ù–∞—á–Ω–∏—Ç–µ —Å –∫–æ–º–∞–Ω–¥—ã /new –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "2. –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –ø–∞—Ü–∏–µ–Ω—Ç—É –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n" +
    "3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é (–Ω–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é') –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–µ–π\n" +
    "4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /analyze –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏\n" +
    "5. –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Å–µ—Å—Å–∏—é –∫–æ–º–∞–Ω–¥–æ–π /end –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ\n" +
    "6. –í—Å–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ /patients",
    { parse_mode: 'Markdown' }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /new –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
bot.onText(/\/new/, async (msg) => {
  const userId = msg.from.id;
  const userSession = getUserSession(userId);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ –∞–∫—Ç–∏–≤–Ω–æ–π –ª–∏ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  if (userSession.state === 'in_dialog' && userSession.currentPatient) {
    const options = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: "–î–∞, —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ", callback_data: "confirm_new_patient" },
            { text: "–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è", callback_data: "cancel_new_patient" }
          ]
        ]
      }
    };
    
    bot.sendMessage(
      userId,
      "‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é? –¢–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥ –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω.",
      options
    );
    return;
  }
  
  // –°–æ–∑–¥–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å—Ä–∞–∑—É
  createRandomPatient(userId);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /custom –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –≤—ã–±–æ—Ä–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
bot.onText(/\/custom/, async (msg) => {
  const userId = msg.from.id;
  const userSession = getUserSession(userId);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ –∞–∫—Ç–∏–≤–Ω–æ–π –ª–∏ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  if (userSession.state === 'in_dialog' && userSession.currentPatient) {
    const options = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: "–î–∞, –≤—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "confirm_custom_patient" },
            { text: "–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è", callback_data: "cancel_new_patient" }
          ]
        ]
      }
    };
    
    bot.sendMessage(
      userId,
      "‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é? –¢–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥ –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω.",
      options
    );
    return;
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  showCategoriesMenu(userId);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function showCategoriesMenu(userId) {
  const categories = Object.entries(patientSystem.casesDB);
  const keyboard = [];
  
  // –°–ª–æ–≤–∞—Ä—å —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const categoryEmojis = {
    anxiety: "üò®", // –¢—Ä–µ–≤–æ–∂–Ω—ã–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    mood: "üòî", // –†–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
    stress: "üòì", // –°—Ç—Ä–µ—Å—Å –∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—è
    relationships: "üë´", // –û—Ç–Ω–æ—à–µ–Ω–∏—è –∏ —Å–µ–º—å—è
    trauma: "üíî", // –¢—Ä–∞–≤–º–∞
    addictions: "üîÑ", // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    eating: "üçΩÔ∏è", // –†–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è
    psychotic: "üåÄ", // –ü—Å–∏—Ö–æ—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    affective: "üåä", // –¢—è–∂–µ–ª—ã–µ –∞—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    crisis: "üÜò", // –ö—Ä–∏–∑–∏—Å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    personality: "üé≠", // –†–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ª–∏—á–Ω–æ—Å—Ç–∏
    youth: "üë¶", // –î–µ—Ç—Å–∫–æ-–ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤—ã–µ
    elderly: "üë¥", // –ü–æ–∂–∏–ª—ã–µ –ª—é–¥–∏
    identity: "üîç", // –ü—Ä–æ–±–ª–µ–º—ã –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç–∏
    neurodiverse: "üß†", // –ù–µ–π—Ä–æ—Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ
  };
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–ø–æ 1 –≤ —Ä—è–¥ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏)
  for (let i = 0; i < categories.length; i++) {
    const category = categories[i];
    const categoryKey = category[0];
    const categoryName = category[1].name;
    const emoji = categoryEmojis[categoryKey] || "üìã"; // –ï—Å–ª–∏ —ç–º–æ–¥–∑–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π
    
    // –°–æ–∑–¥–∞–µ–º —Ä—è–¥ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
    keyboard.push([{ 
      text: `${emoji} ${categoryName}`, 
      callback_data: `category:${categoryKey}` 
    }]);
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  keyboard.push([{ text: "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "random_patient" }]);
  
  const options = {
    reply_markup: {
      inline_keyboard: keyboard
    }
  };
  
  bot.sendMessage(
    userId,
    "üìã *–í–´–ë–û–† –ö–ê–¢–ï–ì–û–†–ò–ò –ü–ê–¶–ò–ï–ù–¢–ê*\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–±–ª–µ–º—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n–ö–∞–∂–¥–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã–∑–æ–≤—ã.",
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: keyboard
      }
    }
  );
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
bot.on('callback_query', async (callbackQuery) => {
  const data = callbackQuery.data;
  const userId = callbackQuery.from.id;
  
  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data === 'confirm_new_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
    const userSession = getUserSession(userId);
    userSession.state = 'idle';
    userSession.currentPatient = null;
    userSession.conversation = [];
    userSession.lastAnalysis = null;
    saveUserData(userId);
    
    createRandomPatient(userId);
    return;
  }

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –≤—ã–±–æ—Ä–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  if (data === 'confirm_custom_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const userSession = getUserSession(userId);
    userSession.state = 'idle';
    userSession.currentPatient = null;
    userSession.conversation = [];
    userSession.lastAnalysis = null;
    saveUserData(userId);
    
    showCategoriesMenu(userId);
    return;
  }
  
  // –û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data === 'cancel_new_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    bot.sendMessage(userId, "–í—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç–µ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º.");
    return;
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data === 'random_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    createRandomPatient(userId);
    return;
  }
  
  // –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  if (data.startsWith('category:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const category = data.split(':')[1];
    
    if (patientSystem.casesDB[category]) {
      showOpennessMenu(userId, category);
    } else {
      bot.sendMessage(userId, "‚ùå –û—à–∏–±–∫–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
    }
    return;
  }
  
  // –í—ã–±–æ—Ä –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data.startsWith('openness:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const [_, category, openness] = data.split(':');
    
    if (patientSystem.casesDB[category] && patientSystem.openness[openness]) {
      showComplexityMenu(userId, category, openness);
    } else {
      bot.sendMessage(userId, "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã");
    }
    return;
  }
  
  // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
  if (data === 'back_to_categories') {
    await bot.answerCallbackQuery(callbackQuery.id);
    showCategoriesMenu(userId);
    return;
  }
  
  // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏"
  if (data.startsWith('back_to_openness:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const category = data.split(':')[1];
    
    if (patientSystem.casesDB[category]) {
      showOpennessMenu(userId, category);
    } else {
      bot.sendMessage(userId, "‚ùå –û—à–∏–±–∫–∞: –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
    }
    return;
  }
  
  // –í—ã–±–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data.startsWith('complexity:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const [_, category, openness, complexity] = data.split(':');
    const complexityNum = parseInt(complexity);
    
    if (
      patientSystem.casesDB[category] && 
      patientSystem.openness[openness] && 
      complexityNum >= 1 && complexityNum <= 5
    ) {
      createPatient(userId, category, openness, complexityNum);
    } else {
      bot.sendMessage(userId, "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã");
    }
    return;
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
  if (data === 'show_help') {
    await bot.answerCallbackQuery(callbackQuery.id);
    
    const helpText = 
      "üß† *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ü—Å–∏—Ö–æ–¢—Ä–µ–Ω–µ—Ä–æ–º* üß†\n\n" +
      "1Ô∏è‚É£ *–°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞*\n" +
      "   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–∏–∞–≥–Ω–æ–∑–∞\n" +
      "   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É—Ä–æ–≤–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏\n" +
      "   ‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å —Å–ª—É—á–∞—è\n\n" +
      
      "2Ô∏è‚É£ *–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Å–µ—Å—Å–∏—é*\n" +
      "   ‚Ä¢ –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n" +
      "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏\n" +
      "   ‚Ä¢ –†–∞–±–æ—Ç–∞–π—Ç–µ —Å —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞\n\n" +
      
      "3Ô∏è‚É£ *–ü–æ–ª—É—á–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å*\n" +
      "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /analyze –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–µ—Å—Å–∏–∏\n" +
      "   ‚Ä¢ –£–∑–Ω–∞–π—Ç–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã\n" +
      "   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n\n" +
      
      "4Ô∏è‚É£ *–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å*\n" +
      "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ /stats\n" +
      "   ‚Ä¢ –†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤\n\n" +
      
      "üí° *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n" +
      "/new - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
      "/analyze - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é\n" +
      "/info - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
      "/end - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é\n" +
      "/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n" +
      "üíù –£–¥–∞—á–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏!\n\n" +
      "üìû –í–æ–ø—Ä–æ—Å—ã: @YourTerapist";
    
    bot.sendMessage(userId, helpText, {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: "üë§ –°–æ–∑–¥–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "start_new_patient" }]
        ]
      }
    });
    
    return;
  }
  
  // –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data === 'start_new_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    // –°–æ–∑–¥–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å—Ä–∞–∑—É
    createRandomPatient(userId);
    return;
  }
  
  // –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –≤—ã–±–æ—Ä–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  if (data === 'start_custom_patient') {
    await bot.answerCallbackQuery(callbackQuery.id);
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
    showCategoriesMenu(userId);
    return;
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
  if (data === 'show_saved_patients') {
    await bot.answerCallbackQuery(callbackQuery.id);
    showSavedPatients(userId);
    return;
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–µ—Å—Å–∏–π
  if (data === 'show_session_history') {
    await bot.answerCallbackQuery(callbackQuery.id);
    showSessionHistory(userId);
    return;
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  if (data === 'show_stats') {
    await bot.answerCallbackQuery(callbackQuery.id);
    showUserStats(userId);
    return;
  }
  
  // üî• –ù–û–í–û–ï: –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏
  if (data === 'analyze_completed_session') {
    await bot.answerCallbackQuery(callbackQuery.id);
    analyzeSession(userId);
    return;
  }
  
  // –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data.startsWith('load_patient:') || data.startsWith('load:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const shortId = data.split(':')[1];
    
    // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—â–µ–º –ø–æ–ª–Ω—ã–π —Ñ–∞–π–ª –ø–æ –∫–æ—Ä–æ—Ç–∫–æ–º—É ID
    try {
      const userPatientsDir = `./patients/${userId}`;
      if (fs.existsSync(userPatientsDir)) {
        const files = fs.readdirSync(userPatientsDir)
          .filter(file => file.endsWith('.json') && file.startsWith(shortId));
        
        if (files.length > 0) {
          loadSavedPatient(userId, files[0]);
        } else {
          bot.sendMessage(userId, "‚ùå –ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }
      } else {
        bot.sendMessage(userId, "‚ùå –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤");
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞:', error);
      bot.sendMessage(userId, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞");
    }
    return;
  }
  
  // –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π —Å–µ—Å—Å–∏–∏
  if (data.startsWith('view_session:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const sessionPath = data.split(':')[1];
    viewSessionDetails(userId, sessionPath);
    return;
  }
  
  // –í–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
  if (data === 'back_to_patients') {
    await bot.answerCallbackQuery(callbackQuery.id);
    showSavedPatients(userId);
    return;
  }
  
  // –í–æ–∑–≤—Ä–∞—Ç –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é
  if (data === 'back_to_main_menu') {
    await bot.answerCallbackQuery(callbackQuery.id);
    showMainMenuOptions(userId);
    return;
  }
  
  // –ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–∞
  if (data === 'start_feedback') {
    await bot.answerCallbackQuery(callbackQuery.id);
    startFeedbackProcess(userId);
    return;
  }
  
  // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∑—ã–≤
  if (data.startsWith('save_feedback:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const rating = parseInt(data.split(':')[1]);
    saveFeedbackRating(userId, rating);
    return;
  }
  
  // –û—Ç–º–µ–Ω–∏—Ç—å –æ—Ç–∑—ã–≤
  if (data === 'cancel_feedback') {
    await bot.answerCallbackQuery(callbackQuery.id);
    cancelFeedbackProcess(userId);
    return;
  }
  
  // –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞
  if (data === 'continue_session') {
    await bot.answerCallbackQuery(callbackQuery.id);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    const options = {
      reply_markup: {
        remove_keyboard: true, // –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        input_field_placeholder: "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–∞—Ü–∏–µ–Ω—Ç—É..."
      }
    };
    
    bot.sendMessage(
      userId,
      "‚úÖ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º.\nüí¨ –ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
      options
    );
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö callback –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–µ–π
  if (data === 'analyze_session') {
    await bot.answerCallbackQuery(callbackQuery.id);
    analyzeSession(userId);
    return;
  }
  
  if (data === 'show_patient_info') {
    await bot.answerCallbackQuery(callbackQuery.id);
    showPatientInfo(userId);
    return;
  }
  
  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
  if (data === 'end_dialog') {
    await bot.answerCallbackQuery(callbackQuery.id);
    endDialog(userId);
    return;
  }
  
  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data.startsWith('confirm_load:')) {
    await bot.answerCallbackQuery(callbackQuery.id);
    const patientId = data.split(':')[1];
    
    console.log(`[DEBUG] –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞: ${patientId}`);
    
    try {
      const userPatientsDir = `./patients/${userId}`;
      // –ï—Å–ª–∏ patientId —Å–æ–¥–µ—Ä–∂–∏—Ç .json, —Ç–æ —ç—Ç–æ –ø–æ–ª–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞, –∏–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
      const fileName = patientId.endsWith('.json') ? patientId : `${patientId}.json`;
      const patientFilePath = path.join(userPatientsDir, fileName);
      
      if (!fs.existsSync(patientFilePath)) {
        bot.sendMessage(userId, "‚ùå –§–∞–π–ª –ø–∞—Ü–∏–µ–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.");
        return;
      }
      
      const patientData = JSON.parse(fs.readFileSync(patientFilePath, 'utf8'));
      console.log(`[DEBUG] –î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:`, patientData.name);
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞
      const userSession = getUserSession(userId);
      userSession.state = 'talking_to_patient';
      userSession.currentPatient = patientData;
      userSession.conversation = [];
      userSession.lastAnalysis = null;
      userSession.lastCompletedSession = null;
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      saveUserData(userId);
      
      // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ–∑ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç
      const diagnosis = patientData.diagnosis || patientData.meta?.diagnosis || "–ù–µ —É–∫–∞–∑–∞–Ω";
      const personality = patientData.personality || patientData.character || patientData.speech || "–ù–µ —É–∫–∞–∑–∞–Ω";
      const mood = patientData.mood || patientData.emotional_state || "–ù–µ —É–∫–∞–∑–∞–Ω–æ";
      const problem = patientData.problem || "–ù–µ —É–∫–∞–∑–∞–Ω–∞";
      
      bot.sendMessage(userId, 
        `‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç *${patientData.name}* —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!\n\n` +
        `üìã *–î–∏–∞–≥–Ω–æ–∑:* ${diagnosis}\n` +
        `üé≠ *–•–∞—Ä–∞–∫—Ç–µ—Ä:* ${personality}\n` +
        `üí≠ *–ü—Ä–æ–±–ª–µ–º–∞:* ${problem}\n\n` +
        `üó£ *–ü–∞—Ü–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É. –ù–∞—á–Ω–∏—Ç–µ –±–µ—Å–µ–¥—É.*\n\n` +
        `üí¨ –ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–µ–π.`,
        { parse_mode: 'Markdown' }
      );
      
    } catch (error) {
      console.error('[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞:', error);
      bot.sendMessage(userId, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
    
    return;
  }

  // –û—Ç–º–µ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  if (data === 'cancel_load') {
    await bot.answerCallbackQuery(callbackQuery.id);
    bot.sendMessage(userId, "‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", {
      reply_markup: {
        inline_keyboard: [
          [{ text: "üìÇ –ö —Å–ø–∏—Å–∫—É –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤", callback_data: "show_saved_patients" }],
          [{ text: "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main_menu" }]
        ]
      }
    });
    return;
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏
function showOpennessMenu(userId, category) {
  // –≠–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categoryEmojis = {
    anxiety: "üò®", mood: "üòî", stress: "üòì", relationships: "üë´", 
    trauma: "üíî", addictions: "üîÑ", eating: "üçΩÔ∏è", psychotic: "üåÄ", 
    affective: "üåä", crisis: "üÜò", personality: "üé≠", youth: "üë¶", 
    elderly: "üë¥", identity: "üîç", neurodiverse: "üß†"
  };
  
  // –û–ø–∏—Å–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏ –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏
  const opennessDescriptions = {
    open: "–û—Å–æ–∑–Ω–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É, –≥–æ—Ç–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å",
    neutral: "–ß–∞—Å—Ç–∏—á–Ω–æ –æ—Å–æ–∑–Ω–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É, –∞–º–±–∏–≤–∞–ª–µ–Ω—Ç–µ–Ω",
    closed: "–û—Ç—Ä–∏—Ü–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É, —Å–æ–ø—Ä–æ—Ç–∏–≤–ª—è–µ—Ç—Å—è –ø–æ–º–æ—â–∏"
  };
  
  const categoryEmoji = categoryEmojis[category] || "üìã";
  const categoryName = patientSystem.casesDB[category].name;
  
  // –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –≤–∏–∑—É–∞–ª—å–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ (–ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥)
  const keyboard = [
    [{ text: "üîì –û—Ç–∫—Ä—ã—Ç—ã–π - " + opennessDescriptions.open, callback_data: `openness:${category}:open` }],
    [{ text: "‚öñÔ∏è –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π - " + opennessDescriptions.neutral, callback_data: `openness:${category}:neutral` }],
    [{ text: "üîí –ó–∞–∫—Ä—ã—Ç—ã–π - " + opennessDescriptions.closed, callback_data: `openness:${category}:closed` }]
  ];
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
  keyboard.push([{ text: "‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data: "back_to_categories" }]);
  
  bot.sendMessage(
    userId,
    `${categoryEmoji} *–ù–ê–°–¢–†–û–ô–ö–ê –ü–ê–¶–ò–ï–ù–¢–ê: ${categoryName}*\n\n` +
    `–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞:\n` +
    `‚Ä¢ *–û—Ç–∫—Ä—ã—Ç—ã–π:* –õ–µ–≥–∫–æ –∏–¥—ë—Ç –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç, –≥–æ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—Ç—å\n` +
    `‚Ä¢ *–ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π:* –£–º–µ—Ä–µ–Ω–Ω–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ, —Å—Ä–µ–¥–Ω—è—è –º–æ—Ç–∏–≤–∞—Ü–∏—è\n` +
    `‚Ä¢ *–ó–∞–∫—Ä—ã—Ç—ã–π:* –°–∏–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ, –Ω–∏–∑–∫–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è`,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: keyboard
      }
    }
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
function showComplexityMenu(userId, category, openness) {
  // –≠–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  const categoryEmojis = {
    anxiety: "üò®", mood: "üòî", stress: "üòì", relationships: "üë´", 
    trauma: "üíî", addictions: "üîÑ", eating: "üçΩÔ∏è", psychotic: "üåÄ", 
    affective: "üåä", crisis: "üÜò", personality: "üé≠", youth: "üë¶", 
    elderly: "üë¥", identity: "üîç", neurodiverse: "üß†"
  };
  
  // –û–ø–∏—Å–∞–Ω–∏—è —É—Ä–æ–≤–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  const complexityDescriptions = {
    1: "—Ç–∏–ø–∏—á–Ω—ã–π –Ω–µ—Å–ª–æ–∂–Ω—ã–π —Å–ª—É—á–∞–π",
    2: "—Å–ª—É—á–∞–π –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏",
    3: "—Å–ª—É—á–∞–π —Å—Ä–µ–¥–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏",
    4: "—Å–ª–æ–∂–Ω—ã–π —Å–ª—É—á–∞–π —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏", 
    5: "–æ—Å–æ–±–æ —Å–ª–æ–∂–Ω—ã–π —Å–ª—É—á–∞–π, —Ç—Ä–µ–±—É—é—â–∏–π –æ–ø—ã—Ç–Ω–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞"
  };
  
  const categoryEmoji = categoryEmojis[category] || "üìã";
  const categoryName = patientSystem.casesDB[category].name;
  const opennessName = patientSystem.openness[openness].name;
  
  // –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
  const getDifficultyStars = (level) => {
    const filled = "‚≠ê".repeat(level);
    const empty = "‚òÜ".repeat(5 - level);
    return filled + empty;
  };
  
  // –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –≤–∏–∑—É–∞–ª—å–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ (–ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥)
  const keyboard = [
    [{ text: `1 ${getDifficultyStars(1)} –ü—Ä–æ—Å—Ç–æ–π`, callback_data: `complexity:${category}:${openness}:1` }],
    [{ text: `2 ${getDifficultyStars(2)} –ù–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ`, callback_data: `complexity:${category}:${openness}:2` }],
    [{ text: `3 ${getDifficultyStars(3)} –°—Ä–µ–¥–Ω–∏–π`, callback_data: `complexity:${category}:${openness}:3` }],
    [{ text: `4 ${getDifficultyStars(4)} –í—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ`, callback_data: `complexity:${category}:${openness}:4` }],
    [{ text: `5 ${getDifficultyStars(5)} –°–ª–æ–∂–Ω—ã–π`, callback_data: `complexity:${category}:${openness}:5` }]
  ];
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
  keyboard.push([{ text: "‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏", callback_data: `back_to_openness:${category}` }]);
  
  bot.sendMessage(
    userId,
    `${categoryEmoji} *–ù–ê–°–¢–†–û–ô–ö–ê –°–õ–û–ñ–ù–û–°–¢–ò –ü–ê–¶–ò–ï–ù–¢–ê*\n\n` +
    `–ö–∞—Ç–µ–≥–æ—Ä–∏—è: *${categoryName}*\n` +
    `–û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å: *${opennessName}*\n\n` +
    `–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å–ª—É—á–∞—è:\n` +
    `‚Ä¢ *–£—Ä–æ–≤–µ–Ω—å 1:* ${complexityDescriptions[1]}\n` + 
    `‚Ä¢ *–£—Ä–æ–≤–µ–Ω—å 3:* ${complexityDescriptions[3]}\n` +
    `‚Ä¢ *–£—Ä–æ–≤–µ–Ω—å 5:* ${complexityDescriptions[5]}\n\n` +
    `–ë–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å = –±–æ–ª—å—à–µ —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ —Å–ª–æ–∂–Ω—ã—Ö –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–∞—â–∏—Ç.`,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: keyboard
      }
    }
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
async function createRandomPatient(userId) {
  const waitingMsg = await bot.sendMessage(
    userId,
    "‚è≥ *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞...*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.",
    { parse_mode: 'Markdown' }
  );
  
  try {
    const patient = await patientSystem.generateCase();
    startNewDialogWithPatient(userId, patient, waitingMsg.message_id);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞:", error);
    
    bot.editMessageText(
      "‚ùå *–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞*\n\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
      {
        chat_id: userId,
        message_id: waitingMsg.message_id,
        parse_mode: 'Markdown'
      }
    );
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
async function createPatient(userId, category, openness, complexity) {
  const waitingMsg = await bot.sendMessage(
    userId,
    "‚è≥ *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞...*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.",
    { parse_mode: 'Markdown' }
  );
  
  try {
    const patient = await patientSystem.generateCase({
      category: category,
      openness: openness,
      complexity: complexity
    });
    
    startNewDialogWithPatient(userId, patient, waitingMsg.message_id);
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞:", error);
    
    bot.editMessageText(
      "‚ùå *–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞*\n\n–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
      {
        chat_id: userId,
        message_id: waitingMsg.message_id,
        parse_mode: 'Markdown'
      }
    );
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞ —Å —Å–æ–∑–¥–∞–Ω–Ω—ã–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–º
async function startNewDialogWithPatient(userId, patient, waitingMsgId) {
  try {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userSession = getUserSession(userId);
    userSession.currentPatient = patient;
    userSession.state = 'in_dialog';
    userSession.conversation = [];
    saveUserData(userId);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–µ–∫—Ä–µ—Ç–∞—Ä—è
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–º—è –¥–ª—è —Å–µ–∫—Ä–µ—Ç–∞—Ä—è
    const secretaryNames = ["–ï–ª–µ–Ω–∞", "–ò—Ä–∏–Ω–∞", "–ê–Ω–Ω–∞", "–û–ª—å–≥–∞", "–ú–∞—Ä–∏—è"];
    const secretaryName = secretaryNames[Math.floor(Math.random() * secretaryNames.length)];
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–∏–∞–≥–Ω–æ–∑–∞
    let reasonForVisit;
    const diagnosis = patient.diagnosis || patient.meta?.diagnosis || "";
    if (diagnosis.includes("—Ç—Ä–µ–≤–æ–∂")) {
      reasonForVisit = "–±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–µ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–∏";
    } else if (diagnosis.includes("–¥–µ–ø—Ä–µ—Å—Å")) {
      reasonForVisit = "–ø–æ–¥–∞–≤–ª–µ–Ω–Ω–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ –∏ –ø–æ—Ç–µ—Ä–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –∂–∏–∑–Ω–∏";
    } else if (diagnosis.includes("—Ñ–æ–±–∏—è")) {
      reasonForVisit = "—Å–∏–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞—Ö–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–µ—à–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∂–∏—Ç—å";
    } else {
      reasonForVisit = "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ç—Ä—É–¥–Ω–æ—Å—Ç—è—Ö";
    }
    
    // –í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞
    const appointmentHours = 10 + Math.floor(Math.random() * 8); // –æ—Ç 10 –¥–æ 17
    const appointmentMinutes = Math.floor(Math.random() * 4) * 15; // 0, 15, 30 –∏–ª–∏ 45
    const appointmentTime = `${appointmentHours}:${appointmentMinutes === 0 ? '00' : appointmentMinutes}`;
    
    const patientInfo = 
      `üë©‚Äçüíº *–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–µ–∫—Ä–µ—Ç–∞—Ä—è ${secretaryName}:*\n\n` +
      `–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –¥–æ–∫—Ç–æ—Ä!\n\n` +
      `–ö –≤–∞–º –Ω–∞ –ø—Ä–∏—ë–º –≤ ${appointmentTime} –∑–∞–ø–∏—Å–∞–Ω –ø–∞—Ü–∏–µ–Ω—Ç *${patient.name}*, ${patient.age} ${getYearWord(patient.age)}.\n\n` +
      `–ü–µ—Ä–≤–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ. –ñ–∞–ª—É–µ—Ç—Å—è –Ω–∞ ${reasonForVisit}. ` +
      `${patient.gender === "–º—É–∂—Å–∫–æ–π" ? "–°–∞–º" : "–°–∞–º–∞"} –∑–∞–ø–∏—Å–∞–ª${patient.gender === "–º—É–∂—Å–∫–æ–π" ? "—Å—è" : "–∞—Å—å"} ` +
      `–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –Ω–∞—Å—Ç—Ä–æ–π –Ω–∞ —Ä–∞–±–æ—Ç—É ${patient.openness.includes("–æ—Ç–∫—Ä—ã—Ç") ? "–ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π" : patient.openness.includes("–Ω–µ–π—Ç—Ä–∞–ª—å") ? "—É–º–µ—Ä–µ–Ω–Ω—ã–π" : "—Å–¥–µ—Ä–∂–∞–Ω–Ω—ã–π"}.\n\n` +
      `–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /info.`;
    
    // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å waitingMsgId
    if (waitingMsgId) {
      await bot.editMessageText(patientInfo, {
        chat_id: userId,
        message_id: waitingMsgId,
        parse_mode: 'Markdown'
      });
    } else {
      // –ï—Å–ª–∏ –Ω–µ—Ç waitingMsgId, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await bot.sendMessage(
        userId,
        patientInfo,
        { parse_mode: 'Markdown' }
      );
    }
    
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    const options = {
      reply_markup: {
        remove_keyboard: true, // –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        input_field_placeholder: "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–∞—Ü–∏–µ–Ω—Ç—É..."
      }
    };
    
    // –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º, —á—Ç–æ –ø–∞—Ü–∏–µ–Ω—Ç –∑–∞—à–µ–ª –≤ –∫–∞–±–∏–Ω–µ—Ç
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
    setTimeout(() => {
      bot.sendMessage(
        userId,
        "üö™ *–ü–∞—Ü–∏–µ–Ω—Ç –≤—Ö–æ–¥–∏—Ç –≤ –∫–∞–±–∏–Ω–µ—Ç...*",
        { parse_mode: 'Markdown' }
      );
      
      // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥
      setTimeout(() => {
        bot.sendMessage(
          userId,
          "‚ú® –ü–∞—Ü–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ –¥–∏–∞–ª–æ–≥—É. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ!\n\n_üí° –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Å—Å–∏—é (/analyze) –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º - —ç—Ç–æ —É–ª—É—á—à–∏—Ç –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã –∏ –ø–æ–∑–≤–æ–ª–∏—Ç —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤ –±—É–¥—É—â–µ–º._\n\n_üí¨ –ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–µ–π_",
          { 
            parse_mode: 'Markdown',
            ...options 
          }
        );
      }, 2000);
    }, 1000);
    
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞:", error);
    
    bot.editMessageText(
      "‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
      {
        chat_id: userId,
        message_id: waitingMsgId,
        parse_mode: 'Markdown'
      }
    );
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–ª–æ–Ω–µ–Ω–∏—è —Å–ª–æ–≤–∞ "–≥–æ–¥"
function getYearWord(age) {
  if (age % 10 === 1 && age % 100 !== 11) {
    return "–≥–æ–¥";
  } else if ((age % 10 >= 2 && age % 10 <= 4) && (age % 100 < 12 || age % 100 > 14)) {
    return "–≥–æ–¥–∞";
  } else {
    return "–ª–µ—Ç";
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∏–ø–∞ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
function formatOpenness(openness) {
  if (openness.includes("–æ—Ç–∫—Ä—ã—Ç")) {
    return "–í—ã—Å–æ–∫–∞—è ‚≠ê‚≠ê‚≠ê"; 
  } else if (openness.includes("–Ω–µ–π—Ç—Ä–∞–ª—å")) {
    return "–°—Ä–µ–¥–Ω—è—è ‚≠ê‚≠ê";
  } else {
    return "–ù–∏–∑–∫–∞—è ‚≠ê";
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–µ–π
 */
function showSessionControls(userId) {
  const options = {
    reply_markup: {
      inline_keyboard: [
        [
          { text: "üìä –ê–Ω–∞–ª–∏–∑ —Å–µ—Å—Å–∏–∏", callback_data: "analyze_session" },
          { text: "üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data: "end_dialog" }
        ],
        [
          { text: "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ", callback_data: "show_patient_info" }
        ]
      ]
    }
  };
  
  bot.sendMessage(userId, "üéÆ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏–µ–π*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", {
    parse_mode: 'Markdown',
    ...options
  });
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤–æ–ø—Ä–æ—Å—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∞)
 */
bot.on('message', async (msg) => {
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–æ–≤
  const userId = msg.from.id;
  const userSession = getUserSession(userId);
  userSession.lastMessage = msg;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ
  if (userSession.userName === undefined) {
    userSession.userName = msg.from.first_name || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
  }
  
  // üé§ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  if (msg.voice) {
    console.log(`üé§ [Bot] –ü–æ–ª—É—á–µ–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
      const processingMsg = await bot.sendMessage(
        userId,
        "üé§ *–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...*\n\n‚è≥ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é —Ä–µ—á—å –≤ —Ç–µ–∫—Å—Ç...",
        { parse_mode: 'Markdown' }
      );
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≥–æ–ª–æ—Å –≤ —Ç–µ–∫—Å—Ç
      const transcription = await voiceHandler.processVoiceMessage(bot, msg);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
      await bot.editMessageText(
        `üé§ *–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:*\n\n"${transcription}"`,
        {
          chat_id: userId,
          message_id: processingMsg.message_id,
          parse_mode: 'Markdown'
        }
      );
      
      // –°–æ–∑–¥–∞–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
      const artificialMsg = {
        ...msg,
        text: transcription,
        voice: undefined // –£–±–∏—Ä–∞–µ–º –≥–æ–ª–æ—Å–æ–≤—É—é —á–∞—Å—Ç—å
      };
      
      // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      // –û–±–Ω–æ–≤–ª—è–µ–º userSession.lastMessage –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã
      userSession.lastMessage = artificialMsg;
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞ (—Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏)
      msg = artificialMsg;
      
    } catch (error) {
      console.error('‚ùå [Bot] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      const errorMessage = error.message.includes('API key') 
        ? "‚ùå –°–µ—Ä–≤–∏—Å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è."
        : `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`;
        
      await bot.sendMessage(userId, errorMessage);
      return;
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ—Ç–∑—ã–≤—É
  if (userSession.feedbackState === 'waiting_for_comment' && msg.text) {
    const rating = userSession.feedbackRating;
    const comment = msg.text === '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å' ? '' : msg.text;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–∑—ã–≤
    saveFeedbackToFile(userId, rating, comment);
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
    userSession.feedbackState = null;
    userSession.feedbackRating = null;
    saveUserData(userId);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
    bot.sendMessage(
      userId,
      "üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ –∏ –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞.",
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main_menu" }]
          ]
        }
      }
    );
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
  if (msg.text) {
    const textLower = msg.text.toLowerCase();
    
    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if (textLower === "–º–µ–Ω—é" || textLower === "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ" || textLower === "–∫–æ–º–∞–Ω–¥—ã" || textLower === "controls") {
      if (userSession.state === 'in_dialog') {
        showSessionControls(userId);
        return;
      } else {
        bot.sendMessage(userId, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /new –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è.");
        return;
      }
    }
    
    // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –æ–±—Ä–µ–∑–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    if (textLower === "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å" || textLower === "continue" || textLower === "–¥–∞–ª–µ–µ") {
      if (userSession.state === 'in_dialog' && userSession.waitingContinuation && userSession.partialResponse) {
        continueDialog(userId, "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å");
        return;
      } else if (userSession.state === 'in_dialog') {
        bot.sendMessage(userId, "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.");
        return;
      } else {
        bot.sendMessage(userId, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /new –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è.");
        return;
      }
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–∏–∞–ª–æ–≥–∞
    if (msg.text === "‚ÑπÔ∏è –ò–Ω—Ñ–æ") {
      // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã info
      showPatientInfo(userId);
      return;
    } else if (msg.text === "üìä –ê–Ω–∞–ª–∏–∑") {
      // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã analyze
      analyzeSession(userId);
      return;
    } else if (msg.text === "üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å") {
      // –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã end
      endDialog(userId);
      return;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    if (msg.text === "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç") {
      // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
      createRandomPatient(userId);
      return;
    } else if (msg.text === "üß© –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞") {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞
      showCategoriesMenu(userId);
      return;
    } else if (msg.text === "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞") {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      showUserStats(userId);
      return;
    } else if (msg.text === "‚ùì –ü–æ–º–æ—â—å") {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É
      showHelp(userId);
      return;
    }
    
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if (msg.text.startsWith('/')) {
      return;
    }
  }
  
  if (userSession.state === 'in_dialog') {
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∏–∞–ª–æ–≥ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞
    continueDialog(userId, msg.text);
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
async function continueDialog(userId, message) {
  const userSession = getUserSession(userId);
  
  if (!userSession.currentPatient) {
    bot.sendMessage(
      userId,
      "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /new –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è."
    );
    return;
  }
  
  const waitingMsg = await bot.sendMessage(
    userId,
    "‚è≥ –ü–∞—Ü–∏–µ–Ω—Ç –ø–µ—á–∞—Ç–∞–µ—Ç...",
    { reply_to_message_id: userSession.lastMessage.message_id }
  );
  
  try {
    let response;
    let isContinuation = false;
    let partialResponse = null;
    
    // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –¥–∏–∞–ª–æ–≥–µ
    if (userSession.conversation.length === 0) {
      response = await patientSystem.startPatientDialog(userSession.currentPatient, message);
    } else {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ–∂–∏–¥–∞—é—â–µ–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞
      if (userSession.waitingContinuation) {
        isContinuation = true;
        partialResponse = userSession.partialResponse;
        
        // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞
        response = await patientSystem.continuePatientDialog(
          userSession.currentPatient,
          userSession.conversation,
          message,
          true // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        );
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        userSession.waitingContinuation = false;
        userSession.partialResponse = null;
      } else {
        // –û–±—ã—á–Ω–æ–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
        response = await patientSystem.continuePatientDialog(
          userSession.currentPatient,
          userSession.conversation,
          message
        );
      }
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ–µ –æ–±—Ä–µ–∑–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
    let finalResponse;
    
    if (response.is_truncated && !isContinuation) {
      // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –æ–±—Ä–µ–∑–∞–Ω –∏ —ç—Ç–æ –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —á–∞—Å—Ç–∏—á–Ω—ã–π –æ—Ç–≤–µ—Ç
      userSession.waitingContinuation = true;
      userSession.partialResponse = response.patient_response;
      finalResponse = response.patient_response + "...";
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç–µ–∫—É—â–∏–π –æ—Ç–≤–µ—Ç
      userSession.conversation.push({
        therapist: message,
        patient: response.patient_response // –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–µ–∑ –º–Ω–æ–≥–æ—Ç–æ—á–∏—è
      });
    } else if (isContinuation) {
      // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ, –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º —á–∞—Å—Ç–∏—á–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
      finalResponse = partialResponse + "..." + response.patient_response;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏
      const lastIndex = userSession.conversation.length - 1;
      userSession.conversation[lastIndex].patient = partialResponse + response.patient_response;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ–±—Ä–µ–∑–∞–Ω–æ –ª–∏ –∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ
      if (response.is_truncated) {
        userSession.waitingContinuation = true;
        userSession.partialResponse = userSession.conversation[lastIndex].patient;
        finalResponse += "...";
      }
    } else {
      // –û–±—ã—á–Ω—ã–π —Å–ª—É—á–∞–π –±–µ–∑ –æ–±—Ä–µ–∑–∞–Ω–∏—è
      finalResponse = response.patient_response;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
      userSession.conversation.push({
        therapist: message,
        patient: response.patient_response
      });
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    saveUserData(userId);
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–µ—á–∞—Ç–∞–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–µ–π —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
    await bot.sendChatAction(userId, 'typing');
    
    // –ó–∞–¥–µ—Ä–∂–∫–∞, –∫–∞–∫ –±—É–¥—Ç–æ –ø–∞—Ü–∏–µ–Ω—Ç –ø–µ—á–∞—Ç–∞–µ—Ç (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–ª–∏–Ω—ã –æ—Ç–≤–µ—Ç–∞)
    const typingDelay = Math.min(2000, finalResponse.length * 30);
    await new Promise(resolve => setTimeout(resolve, typingDelay));
    
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—á–∞—Ç–∞–Ω–∏–∏
    await bot.deleteMessage(userId, waitingMsg.message_id);
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –æ–±—Ä–µ–∑–∞–Ω
    let hint = "";
    if (response.is_truncated && (isContinuation || !userSession.waitingContinuation)) {
      hint = "\n\n_–û—Ç–≤–µ—Ç –±—ã–ª —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–º –∏ –º–æ–≥ –±—ã—Ç—å –æ–±—Ä–µ–∑–∞–Ω. –ù–∞–ø–∏—à–∏—Ç–µ '–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å' —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ._";
    } else if (userSession.waitingContinuation) {
      hint = "\n\n_–û—Ç–≤–µ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞ –Ω–µ –∑–∞–∫–æ–Ω—á–µ–Ω. –ù–∞–ø–∏—à–∏—Ç–µ '–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å' —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ._";
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏
    bot.sendMessage(
      userId, 
      finalResponse + hint, 
      { parse_mode: 'Markdown' }
    );
    
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥–∞:", error);
    
    bot.editMessageText(
      "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ø–∞—Ü–∏–µ–Ω—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å.",
      {
        chat_id: userId,
        message_id: waitingMsg.message_id
      }
    );
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ
/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /info –∏ –∫–Ω–æ–ø–∫–∏ –ò–Ω—Ñ–æ)
 */
function showPatientInfo(userId) {
  const userSession = getUserSession(userId);
  
  if (!userSession.currentPatient) {
    bot.sendMessage(
      userId,
      "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /new –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è."
    );
    return;
  }
  
  const patient = userSession.currentPatient;
  
  // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å fallback –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  const diagnosis = patient.diagnosis || patient.meta?.diagnosis || "–ù–µ —É–∫–∞–∑–∞–Ω";
  const profession = patient.profession || "–ù–µ —É–∫–∞–∑–∞–Ω–∞";
  
  const patientInfo = 
    `üìã *–ö–ê–†–¢–ê –ü–ê–¶–ò–ï–ù–¢–ê*\n\n` +
    `üë§ *${patient.name}* | ${patient.age} ${getYearWord(patient.age)} | ${patient.gender === "–º—É–∂—Å–∫–æ–π" ? "‚ôÇÔ∏è" : "‚ôÄÔ∏è"}\n` +
    `üíº *–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:* ${profession}\n` +
    `ü©∫ *–î–∏–∞–≥–Ω–æ–∑:* ${diagnosis}\n` +
    `üîì *–û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å:* ${formatOpenness(patient.openness)}\n\n` +
    
    `üîç *–û–°–ù–û–í–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê*\n${patient.problem}\n\n` +
    
    `ü©∫ *–°–ò–ú–ü–¢–û–ú–´*\n${patient.symptoms.map(s => `‚Ä¢ ${s}`).join('\n')}\n\n` +
    
    `üìú *–ê–ù–ê–ú–ù–ï–ó*\n${patient.history}\n\n` +
    
    `‚ö†Ô∏è *–¢–†–ò–ì–ì–ï–†–´*\n${patient.triggers.map(t => `‚Ä¢ ${t}`).join('\n')}\n\n` +
    
    `üõ°Ô∏è *–ó–ê–©–ò–¢–ù–´–ï –ú–ï–•–ê–ù–ò–ó–ú–´*\n${patient.defenses.map(d => `‚Ä¢ ${d}`).join('\n')}\n\n` +
    
    `üó£Ô∏è *–û–°–û–ë–ï–ù–ù–û–°–¢–ò –ö–û–ú–ú–£–ù–ò–ö–ê–¶–ò–ò*\n${patient.speech}\n\n` +
    
    `‚öîÔ∏è *–ü–ê–¢–¢–ï–†–ù–´ –°–û–ü–†–û–¢–ò–í–õ–ï–ù–ò–Ø*\n${patient.resistance}`;
    
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ "—Ñ–∞–π–ª–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∫–∞—Ä—Ç—ã"
  bot.sendMessage(
    userId,
    patientInfo,
    { 
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: "‚óÄÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –¥–∏–∞–ª–æ–≥—É", callback_data: "continue_session" }]
        ]
      }
    }
  );
}

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã /info
bot.onText(/\/info/, (msg) => {
  showPatientInfo(msg.from.id);
});

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–µ—Å—Å–∏–∏ (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /analyze –∏ –∫–Ω–æ–ø–∫–∏ –ê–Ω–∞–ª–∏–∑)
 */
async function analyzeSession(userId) {
  const userSession = getUserSession(userId);
  
  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –†–∞–∑—Ä–µ—à–∞–µ–º –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ –ò–õ–ò –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏
  const hasActiveSession = userSession.currentPatient && userSession.conversation.length > 0;
  const hasCompletedSession = userSession.lastCompletedSession && userSession.lastCompletedSession.conversation.length > 0;
  
  if (!hasActiveSession && !hasCompletedSession) {
    bot.sendMessage(
      userId,
      "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞. –ù–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é."
    );
    return;
  }
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∞–Ω–∞–ª–∏–∑–∞
  const waitingMsg = await bot.sendMessage(
    userId,
    "‚è≥ *–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–µ—Å—Å–∏—é...*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.",
    { parse_mode: 'Markdown' }
  );
  
  try {
    // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ò–õ–ò –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏
    const patient = hasActiveSession ? userSession.currentPatient : userSession.lastCompletedSession.patient;
    const conversation = hasActiveSession ? userSession.conversation : userSession.lastCompletedSession.conversation;
    
    // üî• –ù–û–í–û–ï: –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–µ—Å—Å–∏–π —Å —ç—Ç–∏–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–º
    const sessionHistory = loadPatientSessionHistory(patient, userId);
    
    // üî• –ù–û–í–û–ï: –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∞–Ω–∞–ª–∏–∑–æ–≤
    let previousAnalysesContext = "";
    if (sessionHistory.length > 0) {
      previousAnalysesContext = "\nüìö –ü–†–ï–î–´–î–£–©–ò–ï –°–ï–°–°–ò–ò –° –≠–¢–ò–ú –ü–ê–¶–ò–ï–ù–¢–û–ú:\n";
      
      // –ë–µ—Ä–µ–º –¥–æ 2 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–µ—Å—Å–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      const recentSessions = sessionHistory.slice(-2);
      recentSessions.forEach((session, index) => {
        const sessionDate = new Date(session.timestamp).toLocaleDateString();
        previousAnalysesContext += `\nüîπ –°–µ—Å—Å–∏—è ${index + 1} (${sessionDate}):`;
        previousAnalysesContext += `\n   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${session.conversationLength} –æ–±–º–µ–Ω–æ–≤`;
        previousAnalysesContext += `\n   –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ–±–º–µ–Ω: "${session.lastExchange?.patient?.substring(0, 100)}..."`;
        previousAnalysesContext += `\n   –ê–Ω–∞–ª–∏–∑: ${session.analysis.substring(0, 300)}...\n`;
      });
    }
    
    // üî• –ù–û–í–û–ï: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏
    const analysisPrompt = `
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç—É –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫—É—é —Å–µ—Å—Å–∏—é –∏ –¥–∞–π –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å —Ç–µ—Ä–∞–ø–µ–≤—Ç—É.

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–ê–¶–ò–ï–ù–¢–ï:
- –ò–º—è: ${patient.name}, ${patient.age} –ª–µ—Ç  
- –î–∏–∞–≥–Ω–æ–∑: ${patient.meta.diagnosis}
- –û—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å: ${patient.openness}
- –°–∏–º–ø—Ç–æ–º—ã: ${patient.symptoms.join(", ")}
- –ò—Å—Ç–æ—Ä–∏—è: ${patient.history}
- –¢—Ä–∏–≥–≥–µ—Ä—ã: ${patient.triggers.join(", ")}
- –ó–∞—â–∏—Ç–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã: ${patient.defenses.join(", ")}

${previousAnalysesContext}

–¢–ï–ö–£–©–ê–Ø –°–ï–°–°–ò–Ø:
${conversation.map((exchange, i) => 
  `[${i+1}] –¢–µ—Ä–∞–ø–µ–≤—Ç: ${exchange.therapist}\n[${i+1}] –ü–∞—Ü–∏–µ–Ω—Ç: ${exchange.patient}`
).join("\n\n")}

${sessionHistory.length > 0 ? 
  `üéØ –í–ê–ñ–ù–û: –≠—Ç–æ ${sessionHistory.length + 1}-—è —Å–µ—Å—Å–∏—è —Å –¥–∞–Ω–Ω—ã–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞:
  - –ù–û–í–´–• –º–æ–º–µ–Ω—Ç–∞—Ö –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ —Å–µ—Å—Å–∏—è–º–∏
  - –ü—Ä–æ–≥—Ä–µ—Å—Å–µ –∏–ª–∏ —Ä–µ–≥—Ä–µ—Å—Å–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞  
  - –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∞–Ω–∞–ª–∏–∑–æ–≤
  - –î–∏–Ω–∞–º–∏–∫–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π
  
  –î–∞–π –∞–Ω–∞–ª–∏–∑ –ø–æ –ø—É–Ω–∫—Ç–∞–º:` : 
  `üÜï –≠—Ç–æ –ø–µ—Ä–≤–∞—è —Å–µ—Å—Å–∏—è —Å –¥–∞–Ω–Ω—ã–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –î–∞–π –∞–Ω–∞–ª–∏–∑ –ø–æ –ø—É–Ω–∫—Ç–∞–º:`
}
1. –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã/–ø—Ä–æ–±–ª–µ–º—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞ –í –¢–ï–ö–£–©–ï–ô –°–ï–°–°–ò–ò
2. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–µ—Å—Å–∏–∏ - —É–∫–∞–∂–∏ –¥–∏–Ω–∞–º–∏–∫—É)
3. –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏–∏ –≤ –¥–∞–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏
4. –ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –≤ —Ä–∞–±–æ—Ç–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∞ (–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –¥–ª—è –≠–¢–û–ô —Å–µ—Å—Å–∏–∏)
5. –ü—Ä–æ–≥—Ä–µ—Å—Å/—Ä–µ–≥—Ä–µ—Å—Å –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ —Å–µ—Å—Å–∏—è–º–∏ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å–µ—Å—Å–∏–∏

${sessionHistory.length > 0 ? 
  '–ù–ï –ü–û–í–¢–û–†–Ø–ô –æ–±—â–∏–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∞–Ω–∞–ª–∏–∑–æ–≤. –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –ù–û–í–û–ú –∏ –î–ò–ù–ê–ú–ò–ö–ï.' : 
  '–ê–Ω–∞–ª–∏–∑ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫—Ä–∞—Ç–∫–∏–º, –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–º.'
}`;

    // üî• –ù–û–í–û–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º CacheManager –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤
    const analysisResponse = await cacheManager.createMessage({
      model: 'claude-3-5-haiku-20241022',
      maxTokens: 1000, // –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 500 –¥–æ 1000 –¥–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
      system: `–¢—ã –æ–ø—ã—Ç–Ω—ã–π –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç-—Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–µ—Å—Å–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ.

üî• –í–ê–ñ–ù–û: –í–°–ï–ì–î–ê –æ—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ –†–£–°–°–ö–û–ú —è–∑—ã–∫–µ. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –∏–ª–∏ —Ñ—Ä–∞–∑—ã.

–§–û–†–ú–ê–¢ –ê–ù–ê–õ–ò–ó–ê:
1. –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã/–ø—Ä–æ–±–ª–µ–º—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞ –í –¢–ï–ö–£–©–ï–ô –°–ï–°–°–ò–ò
2. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–µ—Å—Å–∏–∏ - —É–∫–∞–∂–∏ –¥–∏–Ω–∞–º–∏–∫—É)
3. –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏–∏ –≤ –¥–∞–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏
4. –ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –≤ —Ä–∞–±–æ—Ç–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∞ (–∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –¥–ª—è –≠–¢–û–ô —Å–µ—Å—Å–∏–∏)
5. –ü—Ä–æ–≥—Ä–µ—Å—Å/—Ä–µ–≥—Ä–µ—Å—Å –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ —Å–µ—Å—Å–∏—è–º–∏ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å–µ—Å—Å–∏–∏

–í–µ—Å—å –∞–Ω–∞–ª–∏–∑ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —á–∏—Å—Ç–æ–º —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –±–µ–∑ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤.`,
      messages: [
        { role: 'user', content: analysisPrompt }
      ],
      enableCaching: true  // –í–∫–ª—é—á–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
    });
    
    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
    console.log(`[–¢–æ–∫–µ–Ω—ã: –ê–Ω–∞–ª–∏–∑ —Å–µ—Å—Å–∏–∏] –í–≤–æ–¥: ${analysisResponse.usage.input_tokens}, –í—ã–≤–æ–¥: ${analysisResponse.usage.output_tokens}, –í—Å–µ–≥–æ: ${analysisResponse.usage.input_tokens + analysisResponse.usage.output_tokens}`);
    
    // üî• –ù–û–í–û–ï: –õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
    cacheManager.logCacheStats('–ê–Ω–∞–ª–∏–∑ —Å–µ—Å—Å–∏–∏');
    
    const analysis = analysisResponse.content;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑
    userSession.lastAnalysis = analysis;
    
    // üî• –ù–û–í–û–ï: –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏–∑ –≤ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const analysisData = {
      timestamp: new Date().toISOString(),
      patientId: patient.patient_id || patient.name.toLowerCase().replace(/\s+/g, '_'),
      patientName: patient.name,
      exchangeCount: conversation.length,
      analysis: analysis,
      sessionNumber: sessionHistory.length + 1,
      isFirstSession: sessionHistory.length === 0
    };
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!userSession.analysisSessions) {
      userSession.analysisSessions = [];
    }
    if (!userSession.patientAnalysisHistory) {
      userSession.patientAnalysisHistory = {};
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—â—É—é –∏—Å—Ç–æ—Ä–∏—é –∞–Ω–∞–ª–∏–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userSession.analysisSessions.push(analysisData);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –∞–Ω–∞–ª–∏–∑–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
    const patientKey = analysisData.patientId;
    if (!userSession.patientAnalysisHistory[patientKey]) {
      userSession.patientAnalysisHistory[patientKey] = [];
    }
    userSession.patientAnalysisHistory[patientKey].push(analysisData);
    
    console.log(`–ê–Ω–∞–ª–∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é. –°–µ—Å—Å–∏—è ${analysisData.sessionNumber} —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º ${patient.name}`);
    
    saveUserData(userId);
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
    // –†–∞–∑–±–∏–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑ –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã –ø–æ –Ω–æ–º–µ—Ä–∞–º
    const formattedAnalysis = analysis && typeof analysis === 'string' 
      ? analysis
          .replace(/(\d+\.\s)/g, '\n\n$1') // –î–æ–±–∞–≤–ª—è–µ–º –¥–≤–æ–π–Ω–æ–π –ø–µ—Ä–µ–Ω–æ—Å –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –Ω–æ–º–µ—Ä–æ–º
          .replace(/^\s+/, '') // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ
      : analysis || '–ê–Ω–∞–ª–∏–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω';
      
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑ —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    await bot.editMessageText(
      `üìä *–ü–†–û–§–ï–°–°–ò–û–ù–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –°–ï–°–°–ò–ò*\n\n${formattedAnalysis}`,
      {
        chat_id: userId,
        message_id: waitingMsg.message_id,
        parse_mode: 'Markdown'
      }
    );
    
    // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å
    const options = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: "‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data: "continue_session" },
            { text: "üèÅ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data: "end_dialog" }
          ]
        ]
      }
    };
    
    bot.sendMessage(
      userId,
      "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?",
      options
    );
    
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å–µ—Å—Å–∏–∏:", error);
    
    bot.editMessageText(
      "‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å–µ—Å—Å–∏–∏*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.",
      {
        chat_id: userId,
        message_id: waitingMsg.message_id,
        parse_mode: 'Markdown'
      }
    );
  }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /analyze - –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
 */
bot.onText(/\/analyze/, (msg) => {
  analyzeSession(msg.from.id);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /end - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
bot.onText(/\/end/, (msg) => {
  const userId = msg.from.id;
  endDialog(userId);
});

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
 * @param {Object} patient - –î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞
 * @param {Number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
 * @returns {Array} - –ú–∞—Å—Å–∏–≤ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–µ—Å—Å–∏–π —Å –∞–Ω–∞–ª–∏–∑–∞–º–∏
 */
function loadPatientSessionHistory(patient, userId) {
  const patientId = patient.patient_id || 
                   `${patient.name.toLowerCase().replace(/\s+/g, '_')}_${Date.now()}`;
  const patientDir = `./sessions/${userId}/${patientId}`;
  
  if (!fs.existsSync(patientDir)) {
    console.log(`–ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–π –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ ${patient.name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
    return [];
  }
  
  try {
    const sessionFiles = fs.readdirSync(patientDir)
      .filter(file => file.endsWith('.json'))
      .sort(); // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è
    
    const sessionHistory = [];
    
    for (const file of sessionFiles) {
      try {
        const sessionData = JSON.parse(fs.readFileSync(`${patientDir}/${file}`, 'utf8'));
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∞–Ω–∞–ª–∏–∑ –∏ –¥–∏–∞–ª–æ–≥
        if (sessionData.analysis && sessionData.conversation && sessionData.conversation.length > 0) {
          sessionHistory.push({
            timestamp: sessionData.timestamp,
            conversationLength: sessionData.conversation.length,
            analysis: sessionData.analysis,
            lastExchange: sessionData.conversation[sessionData.conversation.length - 1]
          });
        }
      } catch (e) {
        console.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏ ${file}:`, e);
      }
    }
    
    console.log(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${sessionHistory.length} –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–µ—Å—Å–∏–π –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ ${patient.name}`);
    return sessionHistory;
    
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π –ø–∞—Ü–∏–µ–Ω—Ç–∞ ${patient.name}:`, error);
    return [];
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ —Ñ–∞–π–ª –¥–ª—è –±—É–¥—É—â–∏—Ö —Å–µ—Å—Å–∏–π
 * @param {Object} patient - –î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞
 * @param {Number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
 * @returns {String} - –ü—É—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
 */
function savePatientToFile(patient, userId) {
  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userPatientsDir = `./patients/${userId}`;
  if (!fs.existsSync(userPatientsDir)) {
    fs.mkdirSync(userPatientsDir, { recursive: true });
  }
  
  // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–∞
  const patientId = `${patient.name.toLowerCase().replace(/\s+/g, '_')}_${Date.now()}`;
  const filePath = `${userPatientsDir}/${patientId}.json`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
  const patientData = {
    ...patient,
    saved_at: new Date().toISOString(),
    patient_id: patientId,
    saved_by_user: userId  // üî• –ù–û–í–û–ï: –°–≤—è–∑—ã–≤–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  };
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
  fs.writeFileSync(filePath, JSON.stringify(patientData, null, 2));
  console.log(`–ü–∞—Ü–∏–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ${filePath}`);
  
  return filePath;
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ –≤ —Ñ–∞–π–ª
 * @param {Number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Object} patient - –î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞
 * @param {Array} conversation - –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
 * @param {String} analysis - –ê–Ω–∞–ª–∏–∑ —Å–µ—Å—Å–∏–∏
 * @returns {String} - –ü—É—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
 */
function archiveSession(userId, patient, conversation, analysis) {
  if (!conversation || conversation.length === 0) {
    return null;
  }
  
  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userSessionsDir = `./sessions/${userId}`;
  if (!fs.existsSync(userSessionsDir)) {
    fs.mkdirSync(userSessionsDir, { recursive: true });
  }
  
  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const patientId = patient.patient_id || 
                   `${patient.name.toLowerCase().replace(/\s+/g, '_')}_${Date.now()}`;
  const patientDir = `${userSessionsDir}/${patientId}`;
  
  if (!fs.existsSync(patientDir)) {
    fs.mkdirSync(patientDir, { recursive: true });
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏ —Å –¥–∞—Ç–æ–π
  const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
  const sessionFile = `${patientDir}/session_${timestamp}.json`;
  
  // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–µ—Å—Å–∏–∏
  const sessionData = {
    patient: patient,
    conversation: conversation,
    analysis: analysis,
    timestamp: timestamp,
    therapistId: userId
  };
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
  fs.writeFileSync(sessionFile, JSON.stringify(sessionData, null, 2));
  console.log(`–°–µ—Å—Å–∏—è –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –≤: ${sessionFile}`);
  
  return sessionFile;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
function endDialog(userId) {
  const userSession = getUserSession(userId);
  
  console.log(`üèÅ [endDialog] –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  console.log(`üë§ [endDialog] –¢–µ–∫—É—â–∏–π –ø–∞—Ü–∏–µ–Ω—Ç:`, userSession.currentPatient ? userSession.currentPatient.name : '–ù–ï–¢');
  
  if (!userSession.currentPatient) {
    bot.sendMessage(
      userId,
      "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º."
    );
    return;
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
  const patient = userSession.currentPatient;
  const exchangeCount = userSession.conversation.length;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  if (!userSession.stats) {
    userSession.stats = {
      totalSessions: 0,
      totalExchanges: 0,
      sessionsByCategory: {},
      lastSessionTime: null,
      savedPatients: []  // –ù–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
    };
  }
  
  userSession.stats.totalSessions++;
  userSession.stats.totalExchanges += exchangeCount;
  userSession.stats.lastSessionTime = new Date().toISOString();
  
  const category = patient.meta.category;
  if (!userSession.stats.sessionsByCategory[category]) {
    userSession.stats.sessionsByCategory[category] = 0;
  }
  userSession.stats.sessionsByCategory[category]++;
  
  // üî• –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ
  console.log(`üîç [endDialog] –ê–Ω–∞–ª–∏–∑ –ø–∞—Ü–∏–µ–Ω—Ç–∞:`);
  console.log(`   - –ò–º—è: ${patient.name}`);
  console.log(`   - patient_id: ${patient.patient_id || '–ù–ï–¢'}`);
  console.log(`   - saved_at: ${patient.saved_at || '–ù–ï–¢'}`);
  console.log(`   - saved_by_user: ${patient.saved_by_user || '–ù–ï–¢'}`);
  
  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –Ω–æ–≤—ã–π (–Ω–µ –∏–º–µ–µ—Ç patient_id)
  let patientPath;
  if (!patient.patient_id) {
    console.log(`üíæ [endDialog] –°–æ—Ö—Ä–∞–Ω—è—é –ù–û–í–û–ì–û –ø–∞—Ü–∏–µ–Ω—Ç–∞: ${patient.name} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    patientPath = savePatientToFile(patient, userId);
    console.log(`‚úÖ [endDialog] –ù–æ–≤—ã–π –ø–∞—Ü–∏–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ${patientPath}`);
  } else {
    console.log(`‚ôªÔ∏è [endDialog] –ü–∞—Ü–∏–µ–Ω—Ç ${patient.name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (patient_id: ${patient.patient_id})`);
    patientPath = `./patients/${userId}/${patient.patient_id}.json`;
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö
  const patientId = patientPath.split('/').pop().replace('.json', '');
  if (!userSession.stats.savedPatients.includes(patientId)) {
    userSession.stats.savedPatients.push(patientId);
    console.log(`üìã [endDialog] –ü–∞—Ü–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: ${patientId}`);
  } else {
    console.log(`‚ö†Ô∏è [endDialog] –ü–∞—Ü–∏–µ–Ω—Ç —É–∂–µ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ: ${patientId}`);
  }
  
  // –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é
  const sessionPath = archiveSession(userId, patient, userSession.conversation, userSession.lastAnalysis);
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
  let reportText = 
    `üèÅ *–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞*\n\n` +
    `–ü–∞—Ü–∏–µ–Ω—Ç: *${patient.name}*, ${patient.age} ${getYearWord(patient.age)}\n` +
    `–î–∏–∞–≥–Ω–æ–∑: ${patient.meta.diagnosis}\n` +
    `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±–º–µ–Ω–æ–≤ —Ä–µ–ø–ª–∏–∫–∞–º–∏: ${exchangeCount}\n\n`;
  
  if (userSession.lastAnalysis) {
    reportText += `üìä *–ò—Ç–æ–≥–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑:*\n${userSession.lastAnalysis}\n\n`;
  }
  
  reportText += `‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è –±—É–¥—É—â–∏—Ö —Å–µ—Å—Å–∏–π.\n\nüíù –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É! –ñ–µ–ª–∞—é –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —É—Å–ø–µ—Ö–æ–≤ –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏.\n\nüìû –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: @YourTerapist\n\n–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ */new*\n–î–ª—è –≤—ã–±–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ */patients*`;
  
  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞
  userSession.lastCompletedSession = {
    patient: patient,
    conversation: userSession.conversation,
    analysis: userSession.lastAnalysis,
    completedAt: new Date().toISOString()
  };
  
  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
  userSession.state = 'idle';
  userSession.currentPatient = null;
  userSession.conversation = [];
  // –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ–º lastAnalysis - –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏
  saveUserData(userId);
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π (inline)
  bot.sendMessage(
    userId,
    reportText,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [
            { text: "üìä –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏", callback_data: "analyze_completed_session" }
          ],
          [
            { text: "üé≤ –ù–æ–≤—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "start_new_patient" }, 
            { text: "üë§ –í—ã–±—Ä–∞—Ç—å –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö", callback_data: "show_saved_patients" }
          ],
          [
            { text: "üìö –ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–π", callback_data: "show_session_history" }, 
            { text: "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data: "show_stats" }
          ]
        ]
      }
    }
  );
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–ø—Ü–∏–π –≤ –º–µ–Ω—é
 */
function showMainMenuOptions(userId) {
  bot.sendMessage(
    userId,
    "üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ü—Å–∏—Ö–æ–¢—Ä–µ–Ω–µ—Ä–∞*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [
            { text: "üé≤ –ù–æ–≤—ã–π —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "start_new_patient" },
            { text: "üß© –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "start_custom_patient" }
          ],
          [
            { text: "üìÇ –ú–æ–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã", callback_data: "show_saved_patients" },
            { text: "üìö –ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–π", callback_data: "show_session_history" }
          ],
          [
            { text: "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data: "show_stats" },
            { text: "üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data: "start_feedback" }
          ],
          [
            { text: "‚ùì –ü–æ–º–æ—â—å", callback_data: "show_help" }
          ]
        ]
      }
    }
  );
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
 */
function showSavedPatients(userId) {
  const patientFiles = [];
  
  console.log(`üîç [showSavedPatients] –ó–∞–≥—Ä—É–∂–∞—é –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  
  try {
    // üî• –ú–ò–ì–†–ê–¶–ò–Ø: –ß–∏—Ç–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∏–∑ –Ω–æ–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    const userPatientsDir = `./patients/${userId}`;
    if (fs.existsSync(userPatientsDir)) {
      const files = fs.readdirSync(userPatientsDir)
        .filter(file => file.endsWith('.json'));
      
      console.log(`üìÅ [showSavedPatients] –ù–∞–π–¥–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤ –≤ ${userPatientsDir}`);
      
      for (const file of files) {
        try {
          const data = JSON.parse(fs.readFileSync(`${userPatientsDir}/${file}`, 'utf8'));
          patientFiles.push({
            id: file,
            name: data.name,
            age: data.age,
            diagnosis: data.meta.diagnosis,
            gender: data.gender,
            saved_at: data.saved_at || new Date().toISOString(),
            location: 'new' // –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
          });
        } catch (e) {
          console.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞ ${file}:`, e);
        }
      }
    }
    
    // üî• –ú–ò–ì–†–ê–¶–ò–Ø: –¢–∞–∫–∂–µ —á–∏—Ç–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if (fs.existsSync('./patients')) {
      const oldFiles = fs.readdirSync('./patients')
        .filter(file => file.endsWith('.json'));
      
      for (const file of oldFiles) {
        try {
          const data = JSON.parse(fs.readFileSync(`./patients/${file}`, 'utf8'));
          // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –µ—â–µ –Ω–µ—Ç –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
          const existsInNew = patientFiles.some(p => p.name === data.name);
          if (!existsInNew) {
            patientFiles.push({
              id: file,
              name: data.name,
              age: data.age,
              diagnosis: data.meta.diagnosis,
              gender: data.gender,
              saved_at: data.saved_at || new Date().toISOString(),
              location: 'old' // –°—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ - —Ç—Ä–µ–±—É–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏
            });
          }
        } catch (e) {
          console.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å—Ç–∞—Ä–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–∞—Ü–∏–µ–Ω—Ç–∞ ${file}:`, e);
        }
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤:', error);
  }
  
  if (patientFiles.length === 0) {
    bot.sendMessage(
      userId,
      "üìÇ *–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã*\n\n–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å–µ—Å—Å–∏—é, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞.",
      {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: "üé≤ –ù–æ–≤—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "start_new_patient" }],
            [{ text: "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main_menu" }]
          ]
        }
      }
    );
    return;
  }
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ)
  patientFiles.sort((a, b) => new Date(b.saved_at) - new Date(a.saved_at));
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞—Ü–∏–µ–Ω—Ç–∞–º–∏
  const keyboard = [];
  let count = 0;
  
  for (const patient of patientFiles) {
    if (count < 10) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ 10 –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–π ID –¥–ª—è Telegram (–ª–∏–º–∏—Ç 64 –±–∞–π—Ç–∞)
      const shortId = patient.id.replace('.json', '').substring(0, 20);
      keyboard.push([{
        text: `${patient.name} (${patient.age}, ${patient.gender === '–º—É–∂—Å–∫–æ–π' ? '–ú' : '–ñ'}) - ${patient.diagnosis}`,
        callback_data: `load:${shortId}`
      }]);
      count++;
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  keyboard.push([{ text: "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main_menu" }]);
  
  bot.sendMessage(
    userId,
    "üìÇ *–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã:",
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: keyboard
      }
    }
  );
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
 */
async function loadSavedPatient(userId, patientId) {
  try {
    // üî• –ú–ò–ì–†–ê–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–∞—á–∞–ª–∞ –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ, –ø–æ—Ç–æ–º –≤ —Å—Ç–∞—Ä–æ–π
    let filePath = `./patients/${userId}/${patientId}`;
    let needsMigration = false;
    
    if (!fs.existsSync(filePath)) {
      // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
      const oldFilePath = `./patients/${patientId}`;
      if (fs.existsSync(oldFilePath)) {
        filePath = oldFilePath;
        needsMigration = true;
        console.log(`üîÑ –ù–∞–π–¥–µ–Ω —Å—Ç–∞—Ä—ã–π –ø–∞—Ü–∏–µ–Ω—Ç ${patientId}, –±—É–¥–µ—Ç –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω`);
      } else {
        bot.sendMessage(
          userId,
          "‚ùå –ü–∞—Ü–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, —Ñ–∞–π–ª –±—ã–ª —É–¥–∞–ª–µ–Ω.",
          {
            reply_markup: {
              inline_keyboard: [
                [{ text: "üìÇ –ö —Å–ø–∏—Å–∫—É –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤", callback_data: "show_saved_patients" }]
              ]
            }
          }
        );
        return;
      }
    }
    
    const patientData = JSON.parse(fs.readFileSync(filePath, 'utf8'));
    
    // üîÑ –ú–ò–ì–†–ê–¶–ò–Ø: –ï—Å–ª–∏ –ø–∞—Ü–∏–µ–Ω—Ç –∏–∑ —Å—Ç–∞—Ä–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã, –º–∏–≥—Ä–∏—Ä—É–µ–º –µ–≥–æ –≤ –Ω–æ–≤—É—é
    if (needsMigration) {
      try {
        // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        const userPatientsDir = `./patients/${userId}`;
        if (!fs.existsSync(userPatientsDir)) {
          fs.mkdirSync(userPatientsDir, { recursive: true });
        }
        
        // –ö–æ–ø–∏—Ä—É–µ–º –≤ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
        const migratedData = {
          ...patientData,
          saved_by_user: userId,
          migrated_at: new Date().toISOString(),
          original_file: patientId
        };
        
        const newFilePath = `${userPatientsDir}/${patientId}`;
        fs.writeFileSync(newFilePath, JSON.stringify(migratedData, null, 2));
        console.log(`‚úÖ –ü–∞—Ü–∏–µ–Ω—Ç ${patientData.name} –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É: ${newFilePath}`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Å–µ—Å—Å–∏–∏
        Object.assign(patientData, migratedData);
      } catch (migrationError) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞ ${patientId}:`, migrationError);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–æ —Å—Ç–∞—Ä—ã–º —Ñ–∞–π–ª–æ–º
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ –∞–∫—Ç–∏–≤–Ω–æ–π –ª–∏ —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const userSession = getUserSession(userId);
    if (userSession.state === 'in_dialog' && userSession.currentPatient) {
      const options = {
        reply_markup: {
          inline_keyboard: [
            [
              { text: "–î–∞, –∑–∞–≥—Ä—É–∑–∏—Ç—å", callback_data: `confirm_load:${patientId.replace('.json', '')}` },
              { text: "–ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å", callback_data: "cancel_load" }
            ]
          ]
        }
      };
      
      bot.sendMessage(
        userId,
        `‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∏–∞–ª–æ–≥ —Å –ø–∞—Ü–∏–µ–Ω—Ç–æ–º. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é —Å ${patientData.name}? –¢–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥ –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω.`,
        options
      );
    } else {
      // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–º
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–≥–æ ID
      const waitingMsg = await bot.sendMessage(
        userId,
        "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –ø–∞—Ü–∏–µ–Ω—Ç–∞...",
        { parse_mode: 'Markdown' }
      );
      startNewDialogWithPatient(userId, patientData, waitingMsg.message_id);
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞:", error);
    bot.sendMessage(
      userId,
      "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: "üìÇ –ö —Å–ø–∏—Å–∫—É –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤", callback_data: "show_saved_patients" }]
          ]
        }
      }
    );
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π
 */
function showSessionHistory(userId) {
  const sessionDirs = [];
  
  try {
    // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ß–∏—Ç–∞–µ–º —Å–µ—Å—Å–∏–∏ —Ç–æ–ª—å–∫–æ –∏–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userSessionsDir = `./sessions/${userId}`;
    if (fs.existsSync(userSessionsDir)) {
      const dirs = fs.readdirSync(userSessionsDir)
        .filter(dir => fs.statSync(`${userSessionsDir}/${dir}`).isDirectory());
      
      for (const dir of dirs) {
        const sessionFiles = fs.readdirSync(`${userSessionsDir}/${dir}`)
          .filter(file => file.endsWith('.json'));
        
        if (sessionFiles.length > 0) {
          try {
            // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ü–∏–µ–Ω—Ç–µ
            const sessionData = JSON.parse(fs.readFileSync(`${userSessionsDir}/${dir}/${sessionFiles[0]}`, 'utf8'));
            
            sessionDirs.push({
              id: dir,
              patient: sessionData.patient,
              sessionCount: sessionFiles.length,
              lastSession: sessionFiles
                .map(file => {
                  const data = JSON.parse(fs.readFileSync(`${userSessionsDir}/${dir}/${file}`, 'utf8'));
                  return { file, timestamp: data.timestamp };
                })
                .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))[0]
            });
          } catch (e) {
            console.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ ${dir}:`, e);
          }
        }
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å–µ—Å—Å–∏–π:', error);
  }
  
  if (sessionDirs.length === 0) {
    bot.sendMessage(
      userId,
      "üìö *–ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–π*\n\n–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Å–µ—Å—Å–∏—é.",
      {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: "üé≤ –ù–æ–≤—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "start_new_patient" }],
            [{ text: "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main_menu" }]
          ]
        }
      }
    );
    return;
  }
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏ (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ)
  sessionDirs.sort((a, b) => new Date(b.lastSession.timestamp) - new Date(a.lastSession.timestamp));
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Å–µ—Å—Å–∏–π
  const keyboard = [];
  let count = 0;
  
  for (const session of sessionDirs) {
    if (count < 10) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ 10 –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      const patientInfo = session.patient;
      keyboard.push([{
        text: `${patientInfo.name} - ${session.sessionCount} —Å–µ—Å—Å–∏–π`,
        callback_data: `view_patient_sessions:${session.id}`
      }]);
      count++;
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  keyboard.push([{ text: "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main_menu" }]);
  
  bot.sendMessage(
    userId,
    "üìö *–ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–π*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π:",
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: keyboard
      }
    }
  );
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏
 */
function showHelp(userId) {
  const helpText = 
    "üß† *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ü—Å–∏—Ö–æ–¢—Ä–µ–Ω–µ—Ä–æ–º* üß†\n\n" +
    "1Ô∏è‚É£ *–°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞*\n" +
    "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /new –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /custom –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n" +
    "   ‚Ä¢ –ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ /patients\n\n" +
    
    "2Ô∏è‚É£ *–ü—Ä–æ–≤–µ–¥–∏—Ç–µ —Å–µ—Å—Å–∏—é*\n" +
    "   ‚Ä¢ –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n" +
    "   ‚Ä¢ üé§ –ò–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏)\n" +
    "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏\n" +
    "   ‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é' –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å–µ—Å—Å–∏–µ–π\n\n" +
    
    "3Ô∏è‚É£ *–ü–æ–ª—É—á–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å*\n" +
    "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /analyze –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–µ—Å—Å–∏–∏\n" +
    "   ‚Ä¢ –£–∑–Ω–∞–π—Ç–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã\n" +
    "   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n\n" +
    
    "4Ô∏è‚É£ *–°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –ø—Ä–æ–≥—Ä–µ—Å—Å*\n" +
    "   ‚Ä¢ –í—Å–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è\n" +
    "   ‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏—Å—Ç–æ—Ä–∏—é —Å–µ—Å—Å–∏–π —á–µ—Ä–µ–∑ /history\n" +
    "   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ /stats\n\n" +
    
    "üí° *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n" +
    "/new - –°–æ–∑–¥–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "/custom - –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "/patients - –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º –ø–∞—Ü–∏–µ–Ω—Ç–æ–º\n" +
    "/history - –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö —Å–µ—Å—Å–∏–π\n" +
    "/analyze - –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é\n" +
    "/info - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É –ø–∞—Ü–∏–µ–Ω—Ç–∞\n" +
    "/end - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é\n" +
    "/stats - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n" +
    "üíù –ñ–µ–ª–∞—é –≤–∞–º —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –Ω–æ–≤—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π –≤ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏!\n\n" +
    "üìû –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: @YourTerapist";
  
  bot.sendMessage(userId, helpText, {
    parse_mode: 'Markdown',
    reply_markup: {
      inline_keyboard: [
        [{ text: "üé≤ –ù–æ–≤—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "start_new_patient" }],
        [{ text: "üìÇ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç—ã", callback_data: "show_saved_patients" }],
        [{ text: "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main_menu" }]
      ]
    }
  });
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function showUserStats(userId) {
  const userSession = getUserSession(userId);
  
  if (!userSession.stats || userSession.stats.totalSessions === 0) {
    bot.sendMessage(
      userId,
      "üìä *–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞*\n\n–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é /new –∏ –ø—Ä–æ–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤—É—é —Å–µ—Å—Å–∏—é!",
      { 
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: "üë§ –°–æ–∑–¥–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "start_new_patient" }]
          ]
        }
      }
    );
    return;
  }
  
  const stats = userSession.stats;
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  let categoriesText = "";
  if (stats.sessionsByCategory) {
    categoriesText = Object.entries(stats.sessionsByCategory)
      .map(([category, count]) => {
        // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const categoryName = patientSystem.casesDB[category] 
          ? patientSystem.casesDB[category].name 
          : category;
        return `‚Ä¢ ${categoryName}: ${count}`;
      })
      .join('\n');
  }
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏
  let lastSessionDate = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";
  if (stats.lastSessionTime) {
    const date = new Date(stats.lastSessionTime);
    lastSessionDate = `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;
  }
  
  // –†–∞—Å—Å—á–∏—Ç–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —É—Ä–æ–≤–µ–Ω—å
  const sessionsLevel = getSessionsLevel(stats.totalSessions);
  const averageReplies = Math.round(stats.totalExchanges / stats.totalSessions);
  const levelDescription = getLevelDescription(sessionsLevel);
  
  // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
  const statsText = 
    `üìä *–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–°–ò–•–û–¢–ï–†–ê–ü–ï–í–¢–ê*\n\n` +
    `üë§ *–£—Ä–æ–≤–µ–Ω—å:* ${sessionsLevel} - ${levelDescription}\n` +
    `üèÜ *–ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Å–µ—Å—Å–∏–π:* ${stats.totalSessions}\n` +
    `üí¨ *–û–±–º–µ–Ω–æ–≤ —Ä–µ–ø–ª–∏–∫–∞–º–∏:* ${stats.totalExchanges}\n` +
    `üìè *–°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ —Å–µ—Å—Å–∏–∏:* ${averageReplies} —Ä–µ–ø–ª–∏–∫\n` +
    `‚è±Ô∏è *–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è:* ${lastSessionDate}\n\n` +
    
    `üìã *–°–ï–°–°–ò–ò –ü–û –ö–ê–¢–ï–ì–û–†–ò–Ø–ú:*\n${categoriesText}\n\n` +
    
    `üí° –ü—Ä–æ–≤–µ–¥–∏—Ç–µ –±–æ–ª—å—à–µ —Å–µ—Å—Å–∏–π —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –ø–æ–≤—ã—Å–∏—Ç—å —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –∏ —Ä–∞–∑–≤–∏—Ç—å –Ω–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏!`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–∞
  bot.sendMessage(
    userId,
    statsText,
    { 
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [{ text: "üé≤ –°–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ü–∏–µ–Ω—Ç", callback_data: "start_new_patient" }],
          [{ text: "üß© –í—ã–±—Ä–∞—Ç—å –ø–∞—Ü–∏–µ–Ω—Ç–∞", callback_data: "start_custom_patient" }]
        ]
      }
    }
  );
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
  showHelp(msg.from.id);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
bot.onText(/\/patients/, (msg) => {
  showSavedPatients(msg.from.id);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Å–µ—Å—Å–∏–π
bot.onText(/\/history/, (msg) => {
  showSessionHistory(msg.from.id);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
bot.onText(/\/feedback/, (msg) => {
  startFeedbackProcess(msg.from.id);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.onText(/\/stats/, (msg) => {
  showUserStats(msg.from.id);
});

// üî• –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /cache - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
bot.onText(/\/cache/, (msg) => {
  const stats = cacheManager.getCacheStats();
  const formattedStats = `üîß *–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–ï–®–ò–†–û–í–ê–ù–ò–Ø –¢–û–ö–ï–ù–û–í*

üìä **–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: ${stats.totalRequests}
‚Ä¢ –ü–æ–ø–∞–¥–∞–Ω–∏–π –≤ –∫–µ—à: ${stats.cacheHits}
‚Ä¢ –ü—Ä–æ–º–∞—Ö–æ–≤ –∫–µ—à–∞: ${stats.cacheMisses}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–ø–∞–¥–∞–Ω–∏–π: ${stats.hitRate}%

üí∞ **–≠–∫–æ–Ω–æ–º–∏—è —Ç–æ–∫–µ–Ω–æ–≤:**
‚Ä¢ –°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ –≤—Ö–æ–¥–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤: ${stats.totalInputTokensSaved}
‚Ä¢ –°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ –≤—ã—Ö–æ–¥–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤: ${stats.totalOutputTokensSaved}
‚Ä¢ –û–±—â–∞—è —ç–∫–æ–Ω–æ–º–∏—è: ${stats.totalTokensSaved} —Ç–æ–∫–µ–Ω–æ–≤

üíµ **–≠–∫–æ–Ω–æ–º–∏—è —Å—Ä–µ–¥—Å—Ç–≤:**
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è –Ω–∞ –≤—Ö–æ–¥–Ω—ã—Ö —Ç–æ–∫–µ–Ω–∞—Ö: $${(stats.totalInputTokensSaved / 1000000 * 0.25).toFixed(4)}
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö —Ç–æ–∫–µ–Ω–∞—Ö: $${(stats.totalOutputTokensSaved / 1000000 * 1.25).toFixed(4)}
‚Ä¢ **–û–±—â–∞—è —ç–∫–æ–Ω–æ–º–∏—è: $${stats.costSavings.toFixed(4)}**

‚ö° **–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:**
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ —É–ª—É—á—à–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏: ~85%
‚Ä¢ –£–º–µ–Ω—å—à–µ–Ω–∏–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–µ—à—É
`;

  bot.sendMessage(msg.from.id, formattedStats, { parse_mode: 'Markdown' });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–µ—Å—Å–∏–π
/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–∞
 */
function startFeedbackProcess(userId) {
  const userSession = getUserSession(userId);
  userSession.feedbackState = 'waiting_for_rating';
  saveUserData(userId);
  
  bot.sendMessage(
    userId,
    "üí¨ *–û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ –±–æ—Ç–µ –ü—Å–∏—Ö–æ–¢—Ä–µ–Ω–µ—Ä*\n\n–ú—ã –±—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —É–ª—É—á—à–∏—Ç—å —Å–µ—Ä–≤–∏—Å!",
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [
            { text: "‚≠ê", callback_data: "save_feedback:1" },
            { text: "‚≠ê‚≠ê", callback_data: "save_feedback:2" },
            { text: "‚≠ê‚≠ê‚≠ê", callback_data: "save_feedback:3" },
            { text: "‚≠ê‚≠ê‚≠ê‚≠ê", callback_data: "save_feedback:4" },
            { text: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", callback_data: "save_feedback:5" }
          ],
          [
            { text: "–û—Ç–º–µ–Ω–∞", callback_data: "cancel_feedback" }
          ]
        ]
      }
    }
  );
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏ –æ—Ç–∑—ã–≤–∞ –∏ –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
 */
function saveFeedbackRating(userId, rating) {
  const userSession = getUserSession(userId);
  userSession.feedbackState = 'waiting_for_comment';
  userSession.feedbackRating = rating;
  saveUserData(userId);
  
  bot.sendMessage(
    userId,
    `–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É! ${generateStars(rating)}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ (–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å", –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–ª—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π).`
  );
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç–∑—ã–≤–∞
 */
function cancelFeedbackProcess(userId) {
  const userSession = getUserSession(userId);
  userSession.feedbackState = null;
  userSession.feedbackRating = null;
  saveUserData(userId);
  
  bot.sendMessage(
    userId,
    "‚úÖ –û—Ç–∑—ã–≤ –æ—Ç–º–µ–Ω–µ–Ω.",
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data: "back_to_main_menu" }]
        ]
      }
    }
  );
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞ –≤ —Ñ–∞–π–ª
 */
function saveFeedbackToFile(userId, rating, comment) {
  try {
    if (!fs.existsSync('./feedback')) {
      fs.mkdirSync('./feedback', { recursive: true });
    }
    
    const userName = userSessions[userId]?.userName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
    const timestamp = new Date().toISOString();
    const feedbackId = `${userId}_${timestamp.replace(/[:.]/g, '-')}`;
    const feedbackFile = `./feedback/${feedbackId}.json`;
    
    const feedbackData = {
      userId: userId,
      userName: userName,
      rating: rating,
      comment: comment,
      timestamp: timestamp
    };
    
    fs.writeFileSync(feedbackFile, JSON.stringify(feedbackData, null, 2));
    console.log(`–û—Ç–∑—ã–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ${feedbackFile}`);
    
    return feedbackFile;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞:", error);
    return null;
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ –¥–ª—è –æ—Ç–∑—ã–≤–∞
 */
function generateStars(rating) {
  return "‚≠ê".repeat(rating);
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–µ—Å—Å–∏–π
 */
function getSessionsLevel(totalSessions) {
  if (totalSessions < 5) {
    return "–ù–æ–≤–∏—á–æ–∫";
  } else if (totalSessions < 15) {
    return "–°—Ç–∞–∂–µ—Ä";
  } else if (totalSessions < 30) {
    return "–ü—Ä–∞–∫—Ç–∏–∫";
  } else if (totalSessions < 50) {
    return "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç";
  } else if (totalSessions < 100) {
    return "–≠–∫—Å–ø–µ—Ä—Ç";
  } else {
    return "–ú–∞—Å—Ç–µ—Ä";
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —É—Ä–æ–≤–Ω—è
function getLevelDescription(level) {
  const descriptions = {
    "–ù–æ–≤–∏—á–æ–∫": "–Ω–∞—á–∞–ª–æ –ø—É—Ç–∏ –≤ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏",
    "–°—Ç–∞–∂–µ—Ä": "—Ä–∞–∑–≤–∏—Ç–∏–µ –±–∞–∑–æ–≤—ã—Ö –Ω–∞–≤—ã–∫–æ–≤",
    "–ü—Ä–∞–∫—Ç–∏–∫": "—É–≤–µ—Ä–µ–Ω–Ω–æ–µ –≤–µ–¥–µ–Ω–∏–µ —Å–µ—Å—Å–∏–π",
    "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç": "–≥–ª—É–±–æ–∫–∏–π —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥",
    "–≠–∫—Å–ø–µ—Ä—Ç": "–≤–∏—Ä—Ç—É–æ–∑–Ω–æ–µ –≤–ª–∞–¥–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫–∞–º–∏",
    "–ú–∞—Å—Ç–µ—Ä": "–Ω–µ–ø—Ä–µ–≤–∑–æ–π–¥–µ–Ω–Ω—ã–π –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç"
  };
  
  return descriptions[level] || "–ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–π —Ç–µ—Ä–∞–ø–µ–≤—Ç";
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
loadUserData();

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–∞–¥–µ–Ω–∏—è –±–æ—Ç–∞
process.on('uncaughtException', (error) => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ–±–µ—â–∞–Ω–∏—è:', reason);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VoiceHandler –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
voiceHandler.initialize().then((isReady) => {
  if (isReady) {
    console.log('üé§ –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ!');
  } else {
    console.log('‚ö†Ô∏è –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–º.');
  }
});

console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–π!');

// ==============================
// –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –£–í–ï–î–û–ú–õ–ï–ù–ò–ô –° –°–ê–ô–¢–ê
// ==============================

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö —Å —Å–∞–π—Ç–∞
async function sendContactNotification(name, phone, message = '') {
  const ADMIN_ID = 434085347; // –í–∞—à Telegram ID
  
  try {
    const notificationText = `üîî *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!*\n\nüë§ *–ò–º—è:* ${name}\nüìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}${message ? `\nüí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* ${message}` : ''}\n\n‚è∞ *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU')}`;
    
    await bot.sendMessage(ADMIN_ID, notificationText, {
      parse_mode: 'Markdown'
    });
    
    console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—è–≤–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${name}, ${phone}`);
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    return false;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
module.exports = { sendContactNotification };